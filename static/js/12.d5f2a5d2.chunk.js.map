{"version":3,"sources":["views/releases/releases.tsx","../node_modules/lodash/filter.js","../node_modules/lodash/_baseFilter.js","../node_modules/lodash/_baseFindIndex.js","../node_modules/lodash/uniqBy.js","../node_modules/lodash/_baseFlatten.js","../node_modules/lodash/_isFlattenable.js","../node_modules/lodash/_baseUniq.js","../node_modules/lodash/_arrayIncludes.js","../node_modules/lodash/_baseIndexOf.js","../node_modules/lodash/_baseIsNaN.js","../node_modules/lodash/_strictIndexOf.js","../node_modules/lodash/_arrayIncludesWith.js","../node_modules/lodash/_createSet.js","../node_modules/lodash/noop.js","../node_modules/lodash/flatMap.js","../node_modules/lodash/_hasUnicode.js","../node_modules/react-query/es/core/infiniteQueryObserver.js","../node_modules/react-query/es/react/useInfiniteQuery.js","../node_modules/lodash/capitalize.js","../node_modules/lodash/upperFirst.js","../node_modules/lodash/_createCaseFirst.js","../node_modules/lodash/_castSlice.js","../node_modules/lodash/_baseSlice.js","../node_modules/lodash/_stringToArray.js","../node_modules/lodash/_asciiToArray.js","../node_modules/lodash/_unicodeToArray.js"],"names":["RELEASE_TYPES_MAP","popular","fresh","hot","ReleasesView","releaseId","useParams","releaseType","queryResult","useApiInfinite","capitalize","total","useMemo","data","pages","pagination","total_items","seoTitle","title","className","map","releaseName","releaseKey","replace","active","href","generatePath","PATHS","Releases","arrayFilter","require","baseFilter","baseIteratee","isArray","module","exports","collection","predicate","baseEach","result","value","index","push","array","fromIndex","fromRight","length","baseUniq","iteratee","arrayPush","isFlattenable","baseFlatten","depth","isStrict","Symbol","isArguments","spreadableSymbol","isConcatSpreadable","undefined","SetCache","arrayIncludes","arrayIncludesWith","cacheHas","createSet","setToArray","comparator","includes","isCommon","seen","set","outer","computed","seenIndex","baseIndexOf","baseFindIndex","baseIsNaN","strictIndexOf","Set","noop","values","reHasUnicode","RegExp","string","test","InfiniteQueryObserver","_QueryObserver","client","options","call","this","_inheritsLoose","_proto","prototype","bindMethods","fetchNextPage","bind","fetchPreviousPage","setOptions","_extends","behavior","infiniteQueryBehavior","getOptimisticResult","fetch","cancelRefetch","throwOnError","meta","fetchMore","direction","pageParam","createResult","query","_state$data","_state$data2","_state$fetchMeta","_state$fetchMeta$fetc","_state$fetchMeta2","_state$fetchMeta2$fet","state","hasNextPage","hasPreviousPage","isFetchingNextPage","isFetching","fetchMeta","isFetchingPreviousPage","QueryObserver","useInfiniteQuery","arg1","arg2","arg3","parseQueryArgs","useBaseQuery","toString","upperFirst","toLowerCase","createCaseFirst","castSlice","hasUnicode","stringToArray","methodName","strSymbols","chr","charAt","trailing","join","slice","baseSlice","start","end","Array","asciiToArray","unicodeToArray","split","rsAstral","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsOptVar","rsSeq","rsSymbol","reUnicode","match"],"mappings":"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","file":"static/js/12.d5f2a5d2.chunk.js","sourcesContent":["import { useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport capitalize from 'lodash/capitalize';\nimport map from 'lodash/map';\n\nimport Link from 'components/link';\nimport Seo from 'components/seo';\nimport Text from 'components/text';\nimport ItemsListInfinite from 'containers/itemsListInfinite';\nimport useApiInfinite from 'hooks/useApiInfinite';\nimport { PATHS, RouteParams, generatePath } from 'routes';\n\nconst RELEASE_TYPES_MAP = {\n  popular: 'Популярные',\n  fresh: 'Свежие',\n  hot: 'Горячие',\n} as const;\n\ntype ReleaseTypes = keyof typeof RELEASE_TYPES_MAP;\n\nconst getReleaseById = (releaseId?: string) => {\n  return releaseId\n    ? // @ts-expect-error\n      RELEASE_TYPES_MAP[releaseId]\n    : RELEASE_TYPES_MAP.fresh;\n};\n\nconst ReleasesView: React.FC = () => {\n  const { releaseType = 'popular' } = useParams<RouteParams>();\n  const queryResult = useApiInfinite(`items${capitalize(releaseType) as Capitalize<ReleaseTypes>}`, ['1']);\n  const total = useMemo(() => queryResult.data?.pages?.[0]?.pagination?.total_items, [queryResult.data?.pages]);\n  const seoTitle = getReleaseById(releaseType);\n  const title = total ? `${seoTitle} (${total})` : seoTitle;\n\n  return (\n    <>\n      <Seo title={seoTitle} />\n      <ItemsListInfinite\n        title={\n          <>\n            <Text>{title}</Text>\n            <div className=\"flex\">\n              {map(RELEASE_TYPES_MAP, (releaseName, releaseKey) => (\n                <Link\n                  key={releaseKey}\n                  className=\"mr-2\"\n                  replace\n                  active={releaseType === releaseKey}\n                  href={generatePath(PATHS.Releases, { releaseType: releaseKey })}\n                >\n                  {releaseName}\n                </Link>\n              ))}\n            </div>\n          </>\n        }\n        queryResult={queryResult}\n      />\n    </>\n  );\n};\n\nexport default ReleasesView;\n","var arrayFilter = require('./_arrayFilter'),\n    baseFilter = require('./_baseFilter'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n *\n * // Combining several predicates using `_.overEvery` or `_.overSome`.\n * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n * // => objects for ['fred', 'barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = filter;\n","var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","var baseIteratee = require('./_baseIteratee'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nmodule.exports = uniqBy;\n","var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n","var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n","var baseFlatten = require('./_baseFlatten'),\n    map = require('./map');\n\n/**\n * Creates a flattened array of values by running each element in `collection`\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n * with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [n, n];\n * }\n *\n * _.flatMap([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMap(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), 1);\n}\n\nmodule.exports = flatMap;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nmodule.exports = hasUnicode;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { QueryObserver } from './queryObserver';\nimport { hasNextPage, hasPreviousPage, infiniteQueryBehavior } from './infiniteQueryBehavior';\nexport var InfiniteQueryObserver = /*#__PURE__*/function (_QueryObserver) {\n  _inheritsLoose(InfiniteQueryObserver, _QueryObserver);\n\n  // Type override\n  // Type override\n  // Type override\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n  function InfiniteQueryObserver(client, options) {\n    return _QueryObserver.call(this, client, options) || this;\n  }\n\n  var _proto = InfiniteQueryObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    _QueryObserver.prototype.bindMethods.call(this);\n\n    this.fetchNextPage = this.fetchNextPage.bind(this);\n    this.fetchPreviousPage = this.fetchPreviousPage.bind(this);\n  };\n\n  _proto.setOptions = function setOptions(options) {\n    _QueryObserver.prototype.setOptions.call(this, _extends({}, options, {\n      behavior: infiniteQueryBehavior()\n    }));\n  };\n\n  _proto.getOptimisticResult = function getOptimisticResult(options) {\n    options.behavior = infiniteQueryBehavior();\n    return _QueryObserver.prototype.getOptimisticResult.call(this, options);\n  };\n\n  _proto.fetchNextPage = function fetchNextPage(options) {\n    return this.fetch({\n      cancelRefetch: true,\n      throwOnError: options == null ? void 0 : options.throwOnError,\n      meta: {\n        fetchMore: {\n          direction: 'forward',\n          pageParam: options == null ? void 0 : options.pageParam\n        }\n      }\n    });\n  };\n\n  _proto.fetchPreviousPage = function fetchPreviousPage(options) {\n    return this.fetch({\n      cancelRefetch: true,\n      throwOnError: options == null ? void 0 : options.throwOnError,\n      meta: {\n        fetchMore: {\n          direction: 'backward',\n          pageParam: options == null ? void 0 : options.pageParam\n        }\n      }\n    });\n  };\n\n  _proto.createResult = function createResult(query, options) {\n    var _state$data, _state$data2, _state$fetchMeta, _state$fetchMeta$fetc, _state$fetchMeta2, _state$fetchMeta2$fet;\n\n    var state = query.state;\n\n    var result = _QueryObserver.prototype.createResult.call(this, query, options);\n\n    return _extends({}, result, {\n      fetchNextPage: this.fetchNextPage,\n      fetchPreviousPage: this.fetchPreviousPage,\n      hasNextPage: hasNextPage(options, (_state$data = state.data) == null ? void 0 : _state$data.pages),\n      hasPreviousPage: hasPreviousPage(options, (_state$data2 = state.data) == null ? void 0 : _state$data2.pages),\n      isFetchingNextPage: state.isFetching && ((_state$fetchMeta = state.fetchMeta) == null ? void 0 : (_state$fetchMeta$fetc = _state$fetchMeta.fetchMore) == null ? void 0 : _state$fetchMeta$fetc.direction) === 'forward',\n      isFetchingPreviousPage: state.isFetching && ((_state$fetchMeta2 = state.fetchMeta) == null ? void 0 : (_state$fetchMeta2$fet = _state$fetchMeta2.fetchMore) == null ? void 0 : _state$fetchMeta2$fet.direction) === 'backward'\n    });\n  };\n\n  return InfiniteQueryObserver;\n}(QueryObserver);","import { InfiniteQueryObserver } from '../core/infiniteQueryObserver';\nimport { parseQueryArgs } from '../core/utils';\nimport { useBaseQuery } from './useBaseQuery'; // HOOK\n\nexport function useInfiniteQuery(arg1, arg2, arg3) {\n  var options = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(options, InfiniteQueryObserver);\n}","var toString = require('./toString'),\n    upperFirst = require('./upperFirst');\n\n/**\n * Converts the first character of `string` to upper case and the remaining\n * to lower case.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to capitalize.\n * @returns {string} Returns the capitalized string.\n * @example\n *\n * _.capitalize('FRED');\n * // => 'Fred'\n */\nfunction capitalize(string) {\n  return upperFirst(toString(string).toLowerCase());\n}\n\nmodule.exports = capitalize;\n","var createCaseFirst = require('./_createCaseFirst');\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\nmodule.exports = upperFirst;\n","var castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\nmodule.exports = createCaseFirst;\n","var baseSlice = require('./_baseSlice');\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\nmodule.exports = castSlice;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n","var asciiToArray = require('./_asciiToArray'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeToArray = require('./_unicodeToArray');\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\nmodule.exports = stringToArray;\n","/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nmodule.exports = asciiToArray;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nmodule.exports = unicodeToArray;\n"],"sourceRoot":""}