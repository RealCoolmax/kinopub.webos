{"version":3,"sources":["../node_modules/lodash/isEqual.js","hooks/useDeepMemo.ts","views/video/video.tsx","components/seo/seo.tsx","hooks/useInViewport.ts","hooks/useUniqueId.ts","components/scrollable/scrollable.tsx","hooks/useApi.ts","../node_modules/react-query/es/react/QueryErrorResetBoundary.js","../node_modules/react-query/es/react/useBaseQuery.js","utils/item.ts","components/button/button.tsx","hooks/useChangebleState.ts","components/checkbox/checkbox.tsx","components/accordion/accordion.tsx","../node_modules/react-query/es/core/queryObserver.js","../node_modules/react-query/es/react/useQuery.js","utils/date.ts","utils/video.ts","components/spotlightContainer/spotlightContainer.tsx","hooks/useHashTrigger.ts","components/popup/popup.tsx","components/radio/radio.tsx","components/select/select.tsx","utils/subtitles.ts","components/media/media.new.tsx","components/player/settings.tsx","components/player/startFrom.tsx","components/player/player.tsx"],"names":["baseIsEqual","require","module","exports","value","other","useDeepMemo","memoFn","key","ref","useRef","current","isEqual","usePrevNextVideos","item","season","video","nextVideo","useMemo","videos","episodes","find","number","nextSeason","seasons","useNextVideo","previousVideo","previousSeason","length","usePreviousVideo","VideoView","history","useHistory","location","useLocation","watchingMarkTimeAsync","useApiMutation","useStorageState","streamingType","isAC2ByDefaultActive","state","useState","currentVideo","setCurrentVideo","currentVideoLinks","useApi","id","saveCurrentTime","useCallback","currentTime","a","playerProps","data","title","getItemTitle","description","getItemDescription","poster","posters","wide","big","audios","mapAudios","sources","mapSources","files","subtitles","mapSubtitles","startTime","watching","status","WatchingStatus","Watching","time","handlePause","handleOnEnded","goBack","handleJumpBackward","handleJumpForward","handleTimeSync","onPause","onEnded","onJumpBackward","onJumpForward","onTimeSync","Seo","props","Helmet","defaultTitle","titleTemplate","useInViewport","target","options","config","disconnectOnLeave","onEnterViewport","onLeaveViewport","forceUpdate","observer","inViewportRef","intersected","enterCountRef","leaveCountRef","startObserver","node","findDOMNode","observe","stopObserver","unobserve","disconnect","handleIntersection","entries","entry","isIntersecting","intersectionRatio","isInViewport","initIntersectionObserver","IntersectionObserver","useEffect","inViewport","enterCount","leaveCount","useUniqueId","prefix","uid","useUID","ScrollableContext","createContext","Scrollable","children","className","onScrollToEnd","footerRef","cx","Provider","method","params","client","ApiClient","query","useQuery","createValue","_isReset","clearReset","reset","isReset","QueryErrorResetBoundaryContext","React","useBaseQuery","Observer","mountedRef","queryClient","useQueryClient","errorResetBoundary","useContext","defaultedOptions","defaultQueryObserverOptions","optimisticResults","onError","notifyManager","batchCalls","onSuccess","onSettled","suspense","staleTime","useErrorBoundary","retryOnMount","result","getOptimisticResult","unsubscribe","subscribe","x","updateResult","setOptions","listeners","isLoading","fetchOptimistic","then","_ref","catch","error","undefined","isError","isFetching","notifyOnChangeProps","trackResult","episode","getItemQualityIcon","quality","Button","icon","iconOnly","autoFocus","wrapperRef","frameId","requestAnimationFrame","focus","cancelAnimationFrame","role","name","useChangebleState","initialState","setState","Checkbox","defaultChecked","checked","onChange","inputRef","handleChange","e","handleKeyPress","isKey","click","component","onKeyPress","type","Accordion","open","onToggle","subtitle","visible","setVisible","handleClick","newVisible","onClick","QueryObserver","_Subscribable","_this","call","this","trackedProps","previousSelectError","bindMethods","_inheritsLoose","_proto","prototype","remove","bind","refetch","onSubscribe","currentQuery","addObserver","shouldFetchOnMount","executeFetch","updateTimers","onUnsubscribe","destroy","shouldFetchOnReconnect","enabled","refetchOnReconnect","isStale","shouldFetchOnWindowFocus","refetchOnWindowFocus","clearTimers","removeObserver","notifyOptions","prevOptions","prevQuery","Error","queryKey","updateQuery","mounted","hasListeners","shouldFetchOptionally","updateStaleTimeout","refetchInterval","updateRefetchInterval","getQueryCache","build","createResult","getCurrentResult","currentResult","_this2","trackedResult","Object","keys","forEach","defineProperty","configurable","enumerable","get","typedKey","includes","push","getNextResult","_this3","Promise","resolve","reject","throwOnError","getCurrentQuery","fetch","_this4","fetchOptions","_this5","promise","noop","_this6","clearStaleTimeout","isServer","isValidTimeout","timeout","timeUntilStale","dataUpdatedAt","staleTimeoutId","setTimeout","_this7","clearRefetchInterval","refetchIntervalId","setInterval","refetchIntervalInBackground","focusManager","isFocused","clearTimeout","clearInterval","prevResult","prevResultState","currentResultState","prevResultOptions","currentResultOptions","queryChange","queryInitialState","currentQueryInitialState","prevQueryResult","previousQueryResult","errorUpdatedAt","isPreviousData","isPlaceholderData","fetchOnMount","fetchOptionally","keepPreviousData","dataUpdateCount","isSuccess","select","structuralSharing","replaceEqualDeep","selectError","getLogger","Date","now","placeholderData","isIdle","failureCount","fetchFailureCount","isFetched","errorUpdateCount","isFetchedAfterMount","isLoadingError","isRefetchError","shouldNotifyListeners","_this$options","notifyOnChangePropsExclusions","includedProps","some","changed","isIncluded","isExcluded","shallowEqualObjects","defaultNotifyOptions","cache","notify","_extends","onQueryUpdate","action","isCancelledError","_this8","batch","listener","Subscribable","shouldLoadOnMount","refetchOnMount","shouldRefetchOnMount","isStaleByTime","arg1","arg2","arg3","parsedOptions","parseQueryArgs","secondsToDuration","seconds","formatDuration","leading","formatIdx","idx","ac3ByDefault","map","audio","lang","filter","author","toUpper","codec","join","default","orderBy","file","src","url","http","parseInt","SpotlightContainer","SpotlightContainerDecorator","enterTo","defaultElement","selector","overflow","preserveId","useHashTrigger","hash","onClose","onOpen","hasHash","search","pathname","close","timeoutId","Popup","closeButton","containerId","Spotlight","add","handleClose","handleCloseIfVisible","spotPopupContent","getCurrent","blur","setActiveContainer","setPointerMode","useButtonEffect","hashTrigger","hidden","spotlightId","spotlightRestrict","spotlightDisabled","Radio","Select","label","defaultValue","closeOnChange","splitIn","setOpen","val","setVal","opts","Array","isArray","option","selectedOption","o","handleChanged","handleChecked","opt","WebVTTConverter","resource","objectURL","reader","FileReader","addEventListener","event","buf","Uint8Array","readAsArrayBuffer","Blob","TextDecoder","blobToString","decoded","text","concat","toVTT","blob","URL","createObjectURL","blobToBuffer","buffer","utf8str","decode","success","fail","readAsText","replace","str","split","each","charCodeAt","from","converter","getURL","useVideoPlayer","autoPlay","audioTracks","sourceTracks","subtitleTracks","isSettingsOpen","videoRef","hlsRef","startTimeRef","isSettingsOpenRef","isHLSJSActive","audioTrack","currentAudioTrack","setCurrentAudioTrack","currentSourceTrack","setCurrentSourceTrack","currentSubtitleTrack","setCurrentSubtitleTrack","getAudioTracks","getAudioTrack","setAudioTrack","audioTrackName","getSourceTracks","uniqBy","getSourceTrack","setSourceTrack","sourceTrackName","sourceTrack","getSubtitleTracks","getSubtitleTrack","setSubtitleTrack","subtitleTrackName","subtitleTrack","currentAudioTrackIndex","findIndex","currentSrc","handleMediaLoaded","removeEventListener","firstChild","lastChild","track","mode","removeChild","pause","play","addSubtitleTrack","document","createElement","appendChild","kind","srclang","endsWith","convertToVTT","HLS","isSupported","hls","enableWebVTT","enableCEA708Captions","attachMedia","on","Events","MEDIA_ATTACHED","loadSource","Boolean","MEDIA_EVENTS","Media","forwardRef","onUpdate","mediaComponent","handleUpdate","eventProps","reduce","args","player","getCurrentTime","setCurrentTime","getPlaybackRate","playbackRate","setPlaybackRate","getPaused","paused","getDuration","duration","getError","networkState","NETWORK_NO_SOURCE","getLoading","readyState","HAVE_ENOUGH_DATA","getProportionLoaded","buffered","end","getProportionPlayed","playPause","load","api","useImperativeHandle","useVideoPlayerApi","NONE","Settings","isOpen","setIsOpen","setAudios","currentAudio","setCurrentAudio","setSources","currentSource","setCurrentSource","setSubtitles","currentSubtitle","setCurrentSubtitle","audioOptions","sourceOptions","source","subtitleOptions","handleVideoUpdate","getVideoNode","handleAudioChange","handleSourceChange","handleSubtitleChange","StartFrom","startInDelay","startIn","setStartIn","startFrom","handleStartFromClick","handleStartFromBeginingClick","intervalId","prevStartIn","newStartIn","Player","timeSyncInterval","onPlay","playerRef","isPaused","setIsPaused","isLoaded","setIsLoaded","setIsSettingsOpen","handlePlay","handleEnded","handleLoadedMetadata","handleSettingsOpen","handleSettingsClose","handlePauseButton","locale","jumpBy","onLoadedMetadata","videoComponent"],"mappings":"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","file":"static/js/13.d8c3e698.chunk.js","sourcesContent":["var baseIsEqual = require('./_baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n","import { useRef } from 'react';\nimport isEqual from 'lodash/isEqual';\n\n/**\n * Memoize a result using deep equality. This hook has two advantages over\n * React.useMemo: it uses deep equality to compare memo keys, and it guarantees\n * that the memo function will only be called if the keys are unequal.\n * React.useMemo cannot be relied on to do this, since it is only a performance\n * optimization (see https://reactjs.org/docs/hooks-reference.html#usememo).\n */\nfunction useDeepMemo<TKey, TValue>(memoFn: () => TValue, key: TKey): TValue {\n  const ref = useRef<{ key: TKey; value: TValue }>();\n\n  if (!ref.current || !isEqual(key, ref.current.key)) {\n    ref.current = { key, value: memoFn() };\n  }\n\n  return ref.current.value;\n}\n\nexport default useDeepMemo;\n","import { useCallback, useMemo, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport { ItemDetails, Season, Streaming, Video, WatchingStatus } from 'api';\nimport Player, { PlayerProps } from 'components/player';\nimport Seo from 'components/seo';\nimport useApi from 'hooks/useApi';\nimport useApiMutation from 'hooks/useApiMutation';\nimport useDeepMemo from 'hooks/useDeepMemo';\nimport useStorageState from 'hooks/useStorageState';\n\nimport { getItemDescription, getItemTitle } from 'utils/item';\nimport { mapAudios, mapSources, mapSubtitles } from 'utils/video';\n\nconst useNextVideo = (item: ItemDetails, season: Season, video: Video) =>\n  useMemo(() => {\n    const nextVideo = (item.videos || season?.episodes)?.find(({ number }) => number === video.number + 1);\n\n    if (nextVideo) {\n      return nextVideo;\n    }\n\n    const nextSeason = item.seasons?.find(({ number }) => number === season.number + 1);\n    if (nextSeason) {\n      return nextSeason.episodes[0];\n    }\n  }, [item, season, video]);\n\nconst usePreviousVideo = (item: ItemDetails, season: Season, video: Video) =>\n  useMemo(() => {\n    const previousVideo = (item.videos || season?.episodes)?.find(({ number }) => number === video.number - 1);\n\n    if (previousVideo) {\n      return previousVideo;\n    }\n\n    const previousSeason = item.seasons?.find(({ number }) => number === season.number - 1);\n    if (previousSeason) {\n      return previousSeason.episodes[previousSeason.episodes.length - 1];\n    }\n  }, [item, season, video]);\n\nconst usePrevNextVideos = (item: ItemDetails, season: Season, video: Video) => {\n  const nextVideo = useNextVideo(item, season, video);\n  const previousVideo = usePreviousVideo(item, season, video);\n\n  return [previousVideo, nextVideo] as const;\n};\n\nconst VideoView: React.FC = () => {\n  const history = useHistory();\n  const location = useLocation<{ title: string; item: ItemDetails; video: Video; season: Season }>();\n  const { watchingMarkTimeAsync } = useApiMutation('watchingMarkTime');\n  const [streamingType] = useStorageState<Streaming>('streaming_type');\n  const [isAC2ByDefaultActive] = useStorageState<boolean>('is_abc3_by_default_active');\n  const { item, video, season } = location.state || {};\n\n  const [currentVideo, setCurrentVideo] = useState(video);\n  const [previousVideo, nextVideo] = usePrevNextVideos(item, season, currentVideo);\n\n  const currentVideoLinks = useApi('itemMediaLinks', [currentVideo.id]);\n\n  const saveCurrentTime = useCallback(\n    async ({ number }: Video, currentTime: number) => {\n      await watchingMarkTimeAsync([item.id, currentTime, number, season?.number]);\n    },\n    [watchingMarkTimeAsync, item, season],\n  );\n\n  const playerProps = useDeepMemo(\n    () =>\n      currentVideoLinks?.data\n        ? ({\n            title: getItemTitle(item, currentVideo, season),\n            description: getItemDescription(item, currentVideo, season),\n            poster: item.posters.wide || item.posters.big,\n            audios: mapAudios(currentVideo.audios, isAC2ByDefaultActive),\n            sources: mapSources(currentVideoLinks.data.files, streamingType),\n            subtitles: mapSubtitles(currentVideoLinks.data.subtitles),\n            startTime: currentVideo.watching.status === WatchingStatus.Watching ? currentVideo.watching.time : 0,\n          } as PlayerProps)\n        : null,\n    [item, season, currentVideo, currentVideoLinks?.data, streamingType, isAC2ByDefaultActive],\n  );\n\n  const handlePause = useCallback(\n    (currentTime: number) => {\n      saveCurrentTime(currentVideo, currentTime);\n    },\n    [saveCurrentTime, currentVideo],\n  );\n\n  const handleOnEnded = useCallback(\n    (currentTime: number) => {\n      saveCurrentTime(currentVideo, currentTime);\n\n      if (nextVideo) {\n        setCurrentVideo(nextVideo);\n        return;\n      }\n\n      history.goBack();\n    },\n    [saveCurrentTime, history, currentVideo, nextVideo],\n  );\n\n  const handleJumpBackward = useCallback(\n    ({ currentTime }: { currentTime: number }) => {\n      saveCurrentTime(currentVideo, currentTime);\n\n      if (previousVideo) {\n        setCurrentVideo(previousVideo);\n      }\n    },\n    [saveCurrentTime, currentVideo, previousVideo],\n  );\n\n  const handleJumpForward = useCallback(\n    ({ currentTime }: { currentTime: number }) => {\n      saveCurrentTime(currentVideo, currentTime);\n\n      if (nextVideo) {\n        setCurrentVideo(nextVideo);\n      }\n    },\n    [saveCurrentTime, currentVideo, nextVideo],\n  );\n\n  const handleTimeSync = useCallback(\n    async (currentTime: number) => {\n      await saveCurrentTime(currentVideo, currentTime);\n    },\n    [saveCurrentTime, currentVideo],\n  );\n\n  return (\n    <>\n      <Seo title={`Просмотр: ${item.title} - Видео`} />\n      {playerProps && (\n        <Player\n          key={currentVideo.id}\n          {...playerProps}\n          streamingType={streamingType}\n          onPause={handlePause}\n          onEnded={handleOnEnded}\n          onJumpBackward={handleJumpBackward}\n          onJumpForward={handleJumpForward}\n          onTimeSync={handleTimeSync}\n        />\n      )}\n    </>\n  );\n};\n\nexport default VideoView;\n","import { Helmet, HelmetProps } from 'react-helmet';\n\ntype Props = {} & HelmetProps;\n\nconst Seo: React.FC<Props> = (props) => {\n  return <Helmet defaultTitle=\"Unknown\" titleTemplate=\"%s | Kinopub WebOS\" {...props} />;\n};\n\nexport default Seo;\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { findDOMNode } from 'react-dom';\n\ntype Props = {\n  onEnterViewport?: () => void;\n  onLeaveViewport?: () => void;\n};\n\nconst useInViewport = (\n  target: React.MutableRefObject<React.ReactInstance | null | undefined>,\n  props: Props,\n  options?: IntersectionObserverInit,\n  config = { disconnectOnLeave: false },\n) => {\n  const { onEnterViewport, onLeaveViewport } = props;\n  const [, forceUpdate] = useState();\n\n  const observer = useRef<IntersectionObserver | null>(null);\n\n  const inViewportRef = useRef(false);\n  const intersected = useRef(false);\n\n  const enterCountRef = useRef(0);\n  const leaveCountRef = useRef(0);\n\n  const startObserver = useCallback(() => {\n    if (target.current && observer.current) {\n      const node = findDOMNode(target.current) as Element;\n      if (node) {\n        observer.current.observe(node);\n      }\n    }\n  }, [target, observer]);\n\n  const stopObserver = useCallback(() => {\n    if (target.current && observer.current) {\n      const node = findDOMNode(target.current) as Element;\n      if (node) {\n        observer.current.unobserve(node);\n        observer.current.disconnect();\n        observer.current = null;\n      }\n    }\n  }, [target, observer]);\n\n  const handleIntersection = useCallback(\n    (entries) => {\n      const entry = entries[0] || {};\n      const { isIntersecting, intersectionRatio } = entry;\n      const isInViewport = typeof isIntersecting !== 'undefined' ? isIntersecting : intersectionRatio > 0;\n\n      // enter\n      if (!intersected.current && isInViewport) {\n        intersected.current = true;\n\n        onEnterViewport?.();\n\n        enterCountRef.current += 1;\n        inViewportRef.current = isInViewport;\n\n        forceUpdate(isInViewport);\n\n        return;\n      }\n\n      // leave\n      if (intersected.current && !isInViewport) {\n        intersected.current = false;\n\n        onLeaveViewport?.();\n\n        if (config.disconnectOnLeave && observer.current) {\n          // disconnect obsever on leave\n          observer.current.disconnect();\n        }\n\n        leaveCountRef.current += 1;\n        inViewportRef.current = isInViewport;\n\n        forceUpdate(isInViewport);\n      }\n    },\n    [observer, config.disconnectOnLeave, onEnterViewport, onLeaveViewport],\n  );\n\n  const initIntersectionObserver = useCallback(() => {\n    if (!observer.current) {\n      observer.current = new IntersectionObserver(handleIntersection, options);\n    }\n  }, [observer, options, handleIntersection]);\n\n  useEffect(() => {\n    initIntersectionObserver();\n    startObserver();\n\n    return () => {\n      stopObserver();\n    };\n  }, [initIntersectionObserver, startObserver, stopObserver]);\n\n  return {\n    inViewport: inViewportRef.current,\n    enterCount: enterCountRef.current,\n    leaveCount: leaveCountRef.current,\n  };\n};\n\nexport default useInViewport;\n","import { useMemo } from 'react';\nimport { useUID } from 'react-uid';\n\nfunction useUniqueId(prefix: string) {\n  const uid = useUID();\n  const id = useMemo(() => `${prefix}-${uid}`, [prefix, uid]);\n\n  return id;\n}\n\nexport default useUniqueId;\n","import { createContext, useMemo, useRef } from 'react';\nimport cx from 'classnames';\n\nimport useInViewport from 'hooks/useInViewport';\nimport useUniqueId from 'hooks/useUniqueId';\n\nexport const ScrollableContext = createContext<{ id?: string }>({});\n\ntype Props = {\n  onScrollToEnd?: () => void;\n  className?: string;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nconst Scrollable: React.FC<Props> = ({ children, className, onScrollToEnd, ...props }) => {\n  const footerRef = useRef<HTMLDivElement>(null);\n  const id = useUniqueId('scrollable');\n  const value = useMemo(\n    () => ({\n      id,\n    }),\n    [id],\n  );\n\n  useInViewport(footerRef, { onEnterViewport: onScrollToEnd });\n\n  return (\n    <div className={cx('overflow-y-auto h-full', className)} {...props} id={id}>\n      <ScrollableContext.Provider value={value}>{children}</ScrollableContext.Provider>\n      {onScrollToEnd && <div className=\"h-40\" ref={footerRef} />}\n    </div>\n  );\n};\n\nexport default Scrollable;\n","import { useMemo } from 'react';\nimport { UseQueryOptions, useQuery } from 'react-query';\n\nimport ApiClient from 'api';\n\ntype Unpromise<T> = T extends Promise<infer U> ? U : T;\n\nexport type Methods = {\n  [method in keyof ApiClient]: ApiClient[method] extends Function ? Unpromise<ReturnType<ApiClient[method]>> : never;\n};\n\nexport type Method = keyof ApiClient & string;\n\nfunction useApi<T extends Method>(\n  method: T,\n  params: Parameters<ApiClient[T]> = [] as Parameters<ApiClient[T]>,\n  options?: UseQueryOptions<Methods[T]>,\n) {\n  const client = useMemo(() => new ApiClient(), []);\n  const query = useQuery<Methods[T]>(\n    [method, ...params],\n    () =>\n      // @ts-expect-error\n      client[method](...params) as Methods[T],\n    options,\n  );\n\n  return query;\n}\n\nexport default useApi;\n","import React from 'react'; // CONTEXT\n\nfunction createValue() {\n  var _isReset = false;\n  return {\n    clearReset: function clearReset() {\n      _isReset = false;\n    },\n    reset: function reset() {\n      _isReset = true;\n    },\n    isReset: function isReset() {\n      return _isReset;\n    }\n  };\n}\n\nvar QueryErrorResetBoundaryContext = /*#__PURE__*/React.createContext(createValue()); // HOOK\n\nexport var useQueryErrorResetBoundary = function useQueryErrorResetBoundary() {\n  return React.useContext(QueryErrorResetBoundaryContext);\n}; // COMPONENT\n\nexport var QueryErrorResetBoundary = function QueryErrorResetBoundary(_ref) {\n  var children = _ref.children;\n  var value = React.useMemo(function () {\n    return createValue();\n  }, []);\n  return /*#__PURE__*/React.createElement(QueryErrorResetBoundaryContext.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};","import React from 'react';\nimport { notifyManager } from '../core/notifyManager';\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary';\nimport { useQueryClient } from './QueryClientProvider';\nexport function useBaseQuery(options, Observer) {\n  var mountedRef = React.useRef(false);\n\n  var _React$useState = React.useState(0),\n      forceUpdate = _React$useState[1];\n\n  var queryClient = useQueryClient();\n  var errorResetBoundary = useQueryErrorResetBoundary();\n  var defaultedOptions = queryClient.defaultQueryObserverOptions(options); // Make sure results are optimistically set in fetching state before subscribing or updating options\n\n  defaultedOptions.optimisticResults = true; // Include callbacks in batch renders\n\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(defaultedOptions.onError);\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(defaultedOptions.onSuccess);\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(defaultedOptions.onSettled);\n  }\n\n  if (defaultedOptions.suspense) {\n    // Always set stale time when using suspense to prevent\n    // fetching again when directly mounting after suspending\n    if (typeof defaultedOptions.staleTime !== 'number') {\n      defaultedOptions.staleTime = 1000;\n    }\n  }\n\n  if (defaultedOptions.suspense || defaultedOptions.useErrorBoundary) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      defaultedOptions.retryOnMount = false;\n    }\n  }\n\n  var _React$useState2 = React.useState(function () {\n    return new Observer(queryClient, defaultedOptions);\n  }),\n      observer = _React$useState2[0];\n\n  var result = observer.getOptimisticResult(defaultedOptions);\n  React.useEffect(function () {\n    mountedRef.current = true;\n    errorResetBoundary.clearReset();\n    var unsubscribe = observer.subscribe(notifyManager.batchCalls(function () {\n      if (mountedRef.current) {\n        forceUpdate(function (x) {\n          return x + 1;\n        });\n      }\n    })); // Update result to make sure we did not miss any query updates\n    // between creating the observer and subscribing to it.\n\n    observer.updateResult();\n    return function () {\n      mountedRef.current = false;\n      unsubscribe();\n    };\n  }, [errorResetBoundary, observer]);\n  React.useEffect(function () {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setOptions(defaultedOptions, {\n      listeners: false\n    });\n  }, [defaultedOptions, observer]); // Handle suspense\n\n  if (defaultedOptions.suspense && result.isLoading) {\n    throw observer.fetchOptimistic(defaultedOptions).then(function (_ref) {\n      var data = _ref.data;\n      defaultedOptions.onSuccess == null ? void 0 : defaultedOptions.onSuccess(data);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(data, null);\n    }).catch(function (error) {\n      errorResetBoundary.clearReset();\n      defaultedOptions.onError == null ? void 0 : defaultedOptions.onError(error);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(undefined, error);\n    });\n  } // Handle error boundary\n\n\n  if ((defaultedOptions.suspense || defaultedOptions.useErrorBoundary) && result.isError && !result.isFetching) {\n    throw result.error;\n  } // Handle result property usage tracking\n\n\n  if (defaultedOptions.notifyOnChangeProps === 'tracked') {\n    result = observer.trackResult(result);\n  }\n\n  return result;\n}","import { ItemDetails, Season, Video } from 'api';\n\nexport function getItemTitle(item?: ItemDetails, video?: Video, season?: Season) {\n  const title = item?.title || '';\n\n  return season ? `${title} (s${season.number}e${video?.number || 1})` : title;\n}\n\nexport function getItemDescription(item?: ItemDetails, video?: Video, season?: Season) {\n  const title = video?.title || '';\n  const episode = `s${season?.number || 1}e${video?.number || 1}`;\n\n  return season ? (title ? `${title} (${episode})` : episode) : title;\n}\n\nexport function getItemQualityIcon(item?: ItemDetails) {\n  return item?.quality ? (item.quality === 2160 ? '4k' : item.quality === 1080 || item.quality === 720 ? 'hd' : 'sd') : null;\n}\n","import { useEffect, useRef } from 'react';\nimport cx from 'classnames';\n\nimport Icon from 'components/icon';\nimport Spottable from 'components/spottable';\n\ntype Props = {\n  icon?: string;\n  iconOnly?: boolean;\n  autoFocus?: boolean;\n  className?: string;\n} & React.ComponentProps<typeof Spottable>;\n\nconst Button: React.FC<Props> = ({ icon, iconOnly, children, autoFocus, className, ...props }) => {\n  const wrapperRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    let frameId: number;\n\n    if (autoFocus) {\n      frameId = requestAnimationFrame(() => {\n        // @ts-expect-error\n        wrapperRef.current?.node?.focus();\n      });\n    }\n\n    return () => {\n      if (frameId) {\n        cancelAnimationFrame(frameId);\n      }\n    };\n  }, [wrapperRef, autoFocus]);\n\n  return (\n    <Spottable\n      {...props}\n      ref={wrapperRef}\n      className={cx('text-gray-200 whitespace-nowrap cursor-pointer rounded px-2 py-1', className)}\n      role=\"button\"\n    >\n      <div className=\"flex items-center\">\n        {icon && <Icon className={cx({ 'mr-2': !iconOnly })} name={icon} />}\n        {!iconOnly && children}\n      </div>\n    </Spottable>\n  );\n};\n\nexport default Button;\n","import { useEffect, useState } from 'react';\n\nfunction useChangebleState<T>(initialState?: T) {\n  const [state, setState] = useState(initialState);\n\n  useEffect(() => {\n    setState(initialState);\n  }, [initialState]);\n\n  return [state, setState] as const;\n}\n\nexport default useChangebleState;\n","import { useCallback, useRef } from 'react';\nimport React from 'react';\nimport cx from 'classnames';\n\nimport Spottable from 'components/spottable';\n\nimport { isKey } from 'utils/keyboard';\n\nexport type CheckboxProps = {\n  defaultChecked?: boolean;\n  checked?: boolean;\n  onChange?: (checked: boolean, e: React.ChangeEvent<HTMLInputElement>) => void;\n  className?: string;\n  type?: string;\n} & Omit<React.HTMLAttributes<HTMLInputElement>, 'onChange'>;\n\nconst Checkbox: React.FC<CheckboxProps> = ({ defaultChecked, checked, onChange, className, children, ...props }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const handleChange = useCallback<React.ChangeEventHandler<HTMLInputElement>>(\n    (e) => {\n      onChange?.(e.target.checked, e);\n    },\n    [onChange],\n  );\n  const handleKeyPress = useCallback((e: KeyboardEvent) => {\n    if (isKey(e, 'Enter')) {\n      inputRef.current?.click();\n    }\n  }, []);\n\n  return (\n    <Spottable\n      component=\"label\"\n      className={cx('text-gray-200 p-2', className)}\n      // @ts-expect-error\n      onKeyPress={handleKeyPress}\n      role=\"button\"\n    >\n      <div className=\"inline-flex items-center cursor-pointer\">\n        <input\n          type=\"checkbox\"\n          {...props}\n          ref={inputRef}\n          className=\"inline-block w-4 h-4\"\n          defaultChecked={defaultChecked}\n          checked={checked}\n          onChange={handleChange}\n        />\n        <span className=\"inline-block ml-2 whitespace-nowrap\">{children}</span>\n      </div>\n    </Spottable>\n  );\n};\n\nexport default Checkbox;\n","import { useCallback } from 'react';\nimport cx from 'classnames';\n\nimport Icon from 'components/icon';\nimport Spottable from 'components/spottable';\nimport Text from 'components/text';\nimport useChangebleState from 'hooks/useChangebleState';\n\ntype Props = {\n  title: string;\n  subtitle?: string;\n  className?: string;\n  open?: boolean;\n  onToggle?: (open: boolean) => void;\n};\n\nconst Accordion: React.FC<Props> = ({ open, onToggle, title, subtitle, className, children }) => {\n  const [visible, setVisible] = useChangebleState(open);\n\n  const handleClick = useCallback(() => {\n    const newVisible = !visible;\n    onToggle?.(newVisible);\n    setVisible(newVisible);\n  }, [visible, setVisible, onToggle]);\n\n  return (\n    <div className=\"flex flex-col w-full\">\n      <Spottable onClick={handleClick} className={cx('p-1 cursor-pointer', className)}>\n        <div className=\"flex flex-col\">\n          <div className=\"flex items-center\">\n            <Text>{title}</Text>\n\n            <Icon name={visible ? 'expand_less' : 'expand_more'} />\n          </div>\n          {!visible && subtitle && <Text className=\"mt-2\">{subtitle}</Text>}\n        </div>\n      </Spottable>\n      {visible && children}\n    </div>\n  );\n};\n\nexport default Accordion;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { isServer, isValidTimeout, noop, replaceEqualDeep, shallowEqualObjects, timeUntilStale } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { focusManager } from './focusManager';\nimport { Subscribable } from './subscribable';\nimport { getLogger } from './logger';\nimport { isCancelledError } from './retryer';\nexport var QueryObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(QueryObserver, _Subscribable);\n\n  function QueryObserver(client, options) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n    _this.options = options;\n    _this.trackedProps = [];\n    _this.previousSelectError = null;\n\n    _this.bindMethods();\n\n    _this.setOptions(options);\n\n    return _this;\n  }\n\n  var _proto = QueryObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    this.remove = this.remove.bind(this);\n    this.refetch = this.refetch.bind(this);\n  };\n\n  _proto.onSubscribe = function onSubscribe() {\n    if (this.listeners.length === 1) {\n      this.currentQuery.addObserver(this);\n\n      if (shouldFetchOnMount(this.currentQuery, this.options)) {\n        this.executeFetch();\n      }\n\n      this.updateTimers();\n    }\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      this.destroy();\n    }\n  };\n\n  _proto.shouldFetchOnReconnect = function shouldFetchOnReconnect() {\n    return _shouldFetchOnReconnect(this.currentQuery, this.options);\n  };\n\n  _proto.shouldFetchOnWindowFocus = function shouldFetchOnWindowFocus() {\n    return _shouldFetchOnWindowFocus(this.currentQuery, this.options);\n  };\n\n  _proto.destroy = function destroy() {\n    this.listeners = [];\n    this.clearTimers();\n    this.currentQuery.removeObserver(this);\n  };\n\n  _proto.setOptions = function setOptions(options, notifyOptions) {\n    var prevOptions = this.options;\n    var prevQuery = this.currentQuery;\n    this.options = this.client.defaultQueryObserverOptions(options);\n\n    if (typeof this.options.enabled !== 'undefined' && typeof this.options.enabled !== 'boolean') {\n      throw new Error('Expected enabled to be a boolean');\n    } // Keep previous query key if the user does not supply one\n\n\n    if (!this.options.queryKey) {\n      this.options.queryKey = prevOptions.queryKey;\n    }\n\n    this.updateQuery();\n    var mounted = this.hasListeners(); // Fetch if there are subscribers\n\n    if (mounted && shouldFetchOptionally(this.currentQuery, prevQuery, this.options, prevOptions)) {\n      this.executeFetch();\n    } // Update result\n\n\n    this.updateResult(notifyOptions); // Update stale interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime)) {\n      this.updateStaleTimeout();\n    } // Update refetch interval if needed\n\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.refetchInterval !== prevOptions.refetchInterval)) {\n      this.updateRefetchInterval();\n    }\n  };\n\n  _proto.getOptimisticResult = function getOptimisticResult(options) {\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return this.createResult(query, defaultedOptions);\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.currentResult;\n  };\n\n  _proto.trackResult = function trackResult(result) {\n    var _this2 = this;\n\n    var trackedResult = {};\n    Object.keys(result).forEach(function (key) {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: function get() {\n          var typedKey = key;\n\n          if (!_this2.trackedProps.includes(typedKey)) {\n            _this2.trackedProps.push(typedKey);\n          }\n\n          return result[typedKey];\n        }\n      });\n    });\n    return trackedResult;\n  };\n\n  _proto.getNextResult = function getNextResult(options) {\n    var _this3 = this;\n\n    return new Promise(function (resolve, reject) {\n      var unsubscribe = _this3.subscribe(function (result) {\n        if (!result.isFetching) {\n          unsubscribe();\n\n          if (result.isError && (options == null ? void 0 : options.throwOnError)) {\n            reject(result.error);\n          } else {\n            resolve(result);\n          }\n        }\n      });\n    });\n  };\n\n  _proto.getCurrentQuery = function getCurrentQuery() {\n    return this.currentQuery;\n  };\n\n  _proto.remove = function remove() {\n    this.client.getQueryCache().remove(this.currentQuery);\n  };\n\n  _proto.refetch = function refetch(options) {\n    return this.fetch(options);\n  };\n\n  _proto.fetchOptimistic = function fetchOptimistic(options) {\n    var _this4 = this;\n\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return query.fetch().then(function () {\n      return _this4.createResult(query, defaultedOptions);\n    });\n  };\n\n  _proto.fetch = function fetch(fetchOptions) {\n    var _this5 = this;\n\n    return this.executeFetch(fetchOptions).then(function () {\n      _this5.updateResult();\n\n      return _this5.currentResult;\n    });\n  };\n\n  _proto.executeFetch = function executeFetch(fetchOptions) {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.updateQuery(); // Fetch\n\n    var promise = this.currentQuery.fetch(this.options, fetchOptions);\n\n    if (!(fetchOptions == null ? void 0 : fetchOptions.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  };\n\n  _proto.updateStaleTimeout = function updateStaleTimeout() {\n    var _this6 = this;\n\n    this.clearStaleTimeout();\n\n    if (isServer || this.currentResult.isStale || !isValidTimeout(this.options.staleTime)) {\n      return;\n    }\n\n    var time = timeUntilStale(this.currentResult.dataUpdatedAt, this.options.staleTime); // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n\n    var timeout = time + 1;\n    this.staleTimeoutId = setTimeout(function () {\n      if (!_this6.currentResult.isStale) {\n        _this6.updateResult();\n      }\n    }, timeout);\n  };\n\n  _proto.updateRefetchInterval = function updateRefetchInterval() {\n    var _this7 = this;\n\n    this.clearRefetchInterval();\n\n    if (isServer || this.options.enabled === false || !isValidTimeout(this.options.refetchInterval)) {\n      return;\n    }\n\n    this.refetchIntervalId = setInterval(function () {\n      if (_this7.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        _this7.executeFetch();\n      }\n    }, this.options.refetchInterval);\n  };\n\n  _proto.updateTimers = function updateTimers() {\n    this.updateStaleTimeout();\n    this.updateRefetchInterval();\n  };\n\n  _proto.clearTimers = function clearTimers() {\n    this.clearStaleTimeout();\n    this.clearRefetchInterval();\n  };\n\n  _proto.clearStaleTimeout = function clearStaleTimeout() {\n    clearTimeout(this.staleTimeoutId);\n    this.staleTimeoutId = undefined;\n  };\n\n  _proto.clearRefetchInterval = function clearRefetchInterval() {\n    clearInterval(this.refetchIntervalId);\n    this.refetchIntervalId = undefined;\n  };\n\n  _proto.createResult = function createResult(query, options) {\n    var prevQuery = this.currentQuery;\n    var prevOptions = this.options;\n    var prevResult = this.currentResult;\n    var prevResultState = this.currentResultState;\n    var prevResultOptions = this.currentResultOptions;\n    var queryChange = query !== prevQuery;\n    var queryInitialState = queryChange ? query.state : this.currentQueryInitialState;\n    var prevQueryResult = queryChange ? this.currentResult : this.previousQueryResult;\n    var state = query.state;\n    var dataUpdatedAt = state.dataUpdatedAt,\n        error = state.error,\n        errorUpdatedAt = state.errorUpdatedAt,\n        isFetching = state.isFetching,\n        status = state.status;\n    var isPreviousData = false;\n    var isPlaceholderData = false;\n    var data; // Optimistically set result in fetching state if needed\n\n    if (options.optimisticResults) {\n      var mounted = this.hasListeners();\n      var fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      var fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n\n      if (fetchOnMount || fetchOptionally) {\n        isFetching = true;\n\n        if (!dataUpdatedAt) {\n          status = 'loading';\n        }\n      }\n    } // Keep previous data if needed\n\n\n    if (options.keepPreviousData && !state.dataUpdateCount && (prevQueryResult == null ? void 0 : prevQueryResult.isSuccess) && status !== 'error') {\n      data = prevQueryResult.data;\n      dataUpdatedAt = prevQueryResult.dataUpdatedAt;\n      status = prevQueryResult.status;\n      isPreviousData = true;\n    } // Select data if needed\n    else if (options.select && typeof state.data !== 'undefined') {\n        // Memoize select result\n        if (prevResult && state.data === (prevResultState == null ? void 0 : prevResultState.data) && options.select === (prevResultOptions == null ? void 0 : prevResultOptions.select) && !this.previousSelectError) {\n          data = prevResult.data;\n        } else {\n          try {\n            data = options.select(state.data);\n\n            if (options.structuralSharing !== false) {\n              data = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, data);\n            }\n\n            this.previousSelectError = null;\n          } catch (selectError) {\n            getLogger().error(selectError);\n            error = selectError;\n            this.previousSelectError = selectError;\n            errorUpdatedAt = Date.now();\n            status = 'error';\n          }\n        }\n      } // Use query data\n      else {\n          data = state.data;\n        } // Show placeholder data if needed\n\n\n    if (typeof options.placeholderData !== 'undefined' && typeof data === 'undefined' && (status === 'loading' || status === 'idle')) {\n      var placeholderData; // Memoize placeholder data\n\n      if ((prevResult == null ? void 0 : prevResult.isPlaceholderData) && options.placeholderData === (prevResultOptions == null ? void 0 : prevResultOptions.placeholderData)) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === 'function' ? options.placeholderData() : options.placeholderData;\n\n        if (options.select && typeof placeholderData !== 'undefined') {\n          try {\n            placeholderData = options.select(placeholderData);\n\n            if (options.structuralSharing !== false) {\n              placeholderData = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, placeholderData);\n            }\n\n            this.previousSelectError = null;\n          } catch (selectError) {\n            getLogger().error(selectError);\n            error = selectError;\n            this.previousSelectError = selectError;\n            errorUpdatedAt = Date.now();\n            status = 'error';\n          }\n        }\n      }\n\n      if (typeof placeholderData !== 'undefined') {\n        status = 'success';\n        data = placeholderData;\n        isPlaceholderData = true;\n      }\n    }\n\n    var result = {\n      status: status,\n      isLoading: status === 'loading',\n      isSuccess: status === 'success',\n      isError: status === 'error',\n      isIdle: status === 'idle',\n      data: data,\n      dataUpdatedAt: dataUpdatedAt,\n      error: error,\n      errorUpdatedAt: errorUpdatedAt,\n      failureCount: state.fetchFailureCount,\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n      isFetchedAfterMount: state.dataUpdateCount > queryInitialState.dataUpdateCount || state.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching: isFetching,\n      isLoadingError: status === 'error' && state.dataUpdatedAt === 0,\n      isPlaceholderData: isPlaceholderData,\n      isPreviousData: isPreviousData,\n      isRefetchError: status === 'error' && state.dataUpdatedAt !== 0,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      remove: this.remove\n    };\n    return result;\n  };\n\n  _proto.shouldNotifyListeners = function shouldNotifyListeners(result, prevResult) {\n    if (!prevResult) {\n      return true;\n    }\n\n    if (result === prevResult) {\n      return false;\n    }\n\n    var _this$options = this.options,\n        notifyOnChangeProps = _this$options.notifyOnChangeProps,\n        notifyOnChangePropsExclusions = _this$options.notifyOnChangePropsExclusions;\n\n    if (!notifyOnChangeProps && !notifyOnChangePropsExclusions) {\n      return true;\n    }\n\n    if (notifyOnChangeProps === 'tracked' && !this.trackedProps.length) {\n      return true;\n    }\n\n    var includedProps = notifyOnChangeProps === 'tracked' ? this.trackedProps : notifyOnChangeProps;\n    return Object.keys(result).some(function (key) {\n      var typedKey = key;\n      var changed = result[typedKey] !== prevResult[typedKey];\n      var isIncluded = includedProps == null ? void 0 : includedProps.some(function (x) {\n        return x === key;\n      });\n      var isExcluded = notifyOnChangePropsExclusions == null ? void 0 : notifyOnChangePropsExclusions.some(function (x) {\n        return x === key;\n      });\n      return changed && !isExcluded && (!includedProps || isIncluded);\n    });\n  };\n\n  _proto.updateResult = function updateResult(notifyOptions) {\n    var prevResult = this.currentResult;\n    this.currentResult = this.createResult(this.currentQuery, this.options);\n    this.currentResultState = this.currentQuery.state;\n    this.currentResultOptions = this.options; // Only notify if something has changed\n\n    if (shallowEqualObjects(this.currentResult, prevResult)) {\n      return;\n    } // Determine which callbacks to trigger\n\n\n    var defaultNotifyOptions = {\n      cache: true\n    };\n\n    if ((notifyOptions == null ? void 0 : notifyOptions.listeners) !== false && this.shouldNotifyListeners(this.currentResult, prevResult)) {\n      defaultNotifyOptions.listeners = true;\n    }\n\n    this.notify(_extends({}, defaultNotifyOptions, notifyOptions));\n  };\n\n  _proto.updateQuery = function updateQuery() {\n    var query = this.client.getQueryCache().build(this.client, this.options);\n\n    if (query === this.currentQuery) {\n      return;\n    }\n\n    var prevQuery = this.currentQuery;\n    this.currentQuery = query;\n    this.currentQueryInitialState = query.state;\n    this.previousQueryResult = this.currentResult;\n\n    if (this.hasListeners()) {\n      prevQuery == null ? void 0 : prevQuery.removeObserver(this);\n      query.addObserver(this);\n    }\n  };\n\n  _proto.onQueryUpdate = function onQueryUpdate(action) {\n    var notifyOptions = {};\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error' && !isCancelledError(action.error)) {\n      notifyOptions.onError = true;\n    }\n\n    this.updateResult(notifyOptions);\n\n    if (this.hasListeners()) {\n      this.updateTimers();\n    }\n  };\n\n  _proto.notify = function notify(notifyOptions) {\n    var _this8 = this;\n\n    notifyManager.batch(function () {\n      // First trigger the configuration callbacks\n      if (notifyOptions.onSuccess) {\n        _this8.options.onSuccess == null ? void 0 : _this8.options.onSuccess(_this8.currentResult.data);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(_this8.currentResult.data, null);\n      } else if (notifyOptions.onError) {\n        _this8.options.onError == null ? void 0 : _this8.options.onError(_this8.currentResult.error);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(undefined, _this8.currentResult.error);\n      } // Then trigger the listeners\n\n\n      if (notifyOptions.listeners) {\n        _this8.listeners.forEach(function (listener) {\n          listener(_this8.currentResult);\n        });\n      } // Then the cache listeners\n\n\n      if (notifyOptions.cache) {\n        _this8.client.getQueryCache().notify({\n          query: _this8.currentQuery,\n          type: 'observerResultsUpdated'\n        });\n      }\n    });\n  };\n\n  return QueryObserver;\n}(Subscribable);\n\nfunction shouldLoadOnMount(query, options) {\n  return options.enabled !== false && !query.state.dataUpdatedAt && !(query.state.status === 'error' && options.retryOnMount === false);\n}\n\nfunction shouldRefetchOnMount(query, options) {\n  return options.enabled !== false && query.state.dataUpdatedAt > 0 && (options.refetchOnMount === 'always' || options.refetchOnMount !== false && isStale(query, options));\n}\n\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || shouldRefetchOnMount(query, options);\n}\n\nfunction _shouldFetchOnReconnect(query, options) {\n  return options.enabled !== false && (options.refetchOnReconnect === 'always' || options.refetchOnReconnect !== false && isStale(query, options));\n}\n\nfunction _shouldFetchOnWindowFocus(query, options) {\n  return options.enabled !== false && (options.refetchOnWindowFocus === 'always' || options.refetchOnWindowFocus !== false && isStale(query, options));\n}\n\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return options.enabled !== false && (query !== prevQuery || prevOptions.enabled === false) && isStale(query, options);\n}\n\nfunction isStale(query, options) {\n  return query.isStaleByTime(options.staleTime);\n}","import { QueryObserver } from '../core';\nimport { parseQueryArgs } from '../core/utils';\nimport { useBaseQuery } from './useBaseQuery'; // HOOK\n\nexport function useQuery(arg1, arg2, arg3) {\n  var parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(parsedOptions, QueryObserver);\n}","import formatDuration from 'format-duration';\n\nexport function secondsToDuration(seconds?: number) {\n  return formatDuration((seconds || 0) * 1000, { leading: true });\n}\n","import filter from 'lodash/filter';\nimport map from 'lodash/map';\nimport orderBy from 'lodash/orderBy';\nimport toUpper from 'lodash/toUpper';\n\nimport { Audio, Streaming, Subtitle } from 'api';\nimport { AudioTrack, SourceTrack, SubtitleTrack } from 'components/media';\n\nconst formatIdx = (idx: number) => (idx < 10 ? `0${idx}` : idx);\n\nexport function mapAudios(audios: Audio[], ac3ByDefault?: boolean): AudioTrack[] {\n  return map(audios, (audio, idx) => ({\n    lang: audio.lang,\n    name: filter([\n      `${formatIdx(idx + 1)}.`,\n      audio.type?.title && audio.author?.title ? `${audio.type?.title}.` : audio.type?.title,\n      audio.author?.title,\n      audio.type?.title || audio.author?.title ? `(${toUpper(audio.lang)})` : toUpper(audio.lang),\n      audio.codec === 'ac3' && toUpper(audio.codec),\n    ]).join(' '),\n    default: ac3ByDefault && audio.codec === 'ac3',\n  }));\n}\n\nexport function mapSources(\n  files: { url: string | { [key in Streaming]?: string }; quality?: string }[],\n  streamingType?: Streaming,\n): SourceTrack[] {\n  return orderBy(\n    map(files, (file) => {\n      const src = (typeof file.url === 'string' ? file.url : file.url[streamingType!] || file.url.http!) as string;\n\n      return {\n        src,\n        name: file.quality!,\n        type: src.includes('.m3u8') ? 'application/x-mpegURL' : 'video/mp4',\n      };\n    }),\n    ({ name }) => parseInt(name),\n    'desc',\n  );\n}\n\nexport function mapSubtitles(subtitles: Subtitle[]): SubtitleTrack[] {\n  return map(subtitles, (subtitle, idx) => ({\n    src: subtitle.url,\n    lang: subtitle.lang,\n    name: `${toUpper(subtitle.lang)} #${formatIdx(idx + 1)}`,\n  }));\n}\n","import SpotlightContainerDecorator from '@enact/spotlight/SpotlightContainerDecorator';\n\nexport const CONFIG = {\n  enterTo: 'default-element',\n  defaultElement: '.spottable',\n  selector: '.spottable',\n  overflow: true,\n  preserveId: true,\n};\n\nconst SpotlightContainer = SpotlightContainerDecorator(CONFIG, (props: React.HTMLAttributes<HTMLDivElement>) => <div {...props} />);\n\nexport default SpotlightContainer;\n","import { useCallback, useEffect, useMemo } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nfunction useHashTrigger(hash: string, onClose?: Function, onOpen?: Function) {\n  const history = useHistory();\n  const hasHash = useCallback(() => history.location.hash.includes(hash), [hash, history]);\n\n  const open = useCallback(() => {\n    if (!hasHash()) {\n      history.push({\n        hash,\n        state: history.location.state,\n        search: history.location.search,\n        pathname: history.location.pathname,\n      });\n    }\n    onOpen?.();\n  }, [hash, hasHash, history, onOpen]);\n\n  const close = useCallback(() => {\n    if (hasHash()) {\n      history.goBack();\n    }\n    onClose?.();\n  }, [hasHash, history, onClose]);\n\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      if (hasHash()) {\n        open();\n      } else {\n        close();\n      }\n    }, 100);\n\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  }, [hasHash, open, close, history.location.hash]);\n\n  return useMemo(\n    () => ({\n      open,\n      close,\n    }),\n    [open, close],\n  );\n}\n\nexport default useHashTrigger;\n","import { useCallback, useEffect, useMemo } from 'react';\nimport Spotlight from '@enact/spotlight';\nimport cx from 'classnames';\n\nimport Scrollable from 'components/scrollable';\nimport SpotlightContainer from 'components/spotlightContainer';\nimport useButtonEffect, { KeyboardCodesKeys } from 'hooks/useButtonEffect';\nimport useHashTrigger from 'hooks/useHashTrigger';\n\ntype Props = {\n  visible: boolean;\n  onClose: () => void;\n  closeButton?: KeyboardCodesKeys;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nconst Popup: React.FC<Props> = ({ visible, onClose, children, className, closeButton = 'Blue', ...props }) => {\n  const containerId = useMemo(() => Spotlight.add({}), []);\n  const handleClose = useCallback(() => {\n    onClose();\n  }, [onClose]);\n\n  const handleCloseIfVisible = useCallback(() => {\n    if (visible) {\n      handleClose();\n\n      return false;\n    }\n  }, [visible, handleClose]);\n\n  const spotPopupContent = useCallback(() => {\n    if (!Spotlight.focus(containerId)) {\n      const current = Spotlight.getCurrent();\n\n      // In cases where the container contains no spottable controls or we're in pointer-mode, focus\n      // cannot inherently set the active container or blur the active control, so we must do that\n      // here.\n      if (current) {\n        // @ts-expect-error\n        current.blur();\n      }\n\n      Spotlight.setActiveContainer(containerId);\n      setTimeout(() => {\n        Spotlight.setPointerMode(false);\n        Spotlight.focus(containerId);\n      }, 500);\n    }\n  }, [containerId]);\n\n  useButtonEffect('Back', handleCloseIfVisible);\n  useButtonEffect(closeButton, handleCloseIfVisible);\n  const hashTrigger = useHashTrigger('popup', handleCloseIfVisible);\n\n  useEffect(() => {\n    if (visible) {\n      spotPopupContent();\n      hashTrigger.open();\n    } else {\n      hashTrigger.close();\n    }\n  }, [visible, spotPopupContent, hashTrigger]);\n\n  return (\n    <>\n      <div\n        className={cx('fixed z-999 top-0 left-0 right-0 bottom-0 bg-black bg-opacity-50', {\n          hidden: !visible,\n        })}\n        onClick={handleClose}\n      />\n      <SpotlightContainer\n        {...props}\n        spotlightId={containerId}\n        spotlightRestrict=\"self-only\"\n        spotlightDisabled={!visible}\n        className={cx(\n          'fixed z-999 bottom-0 left-0 right-0 p-4 bg-black ring',\n          {\n            hidden: !visible,\n          },\n          className,\n        )}\n      >\n        <Scrollable className=\"max-h-screen\">{children}</Scrollable>\n      </SpotlightContainer>\n    </>\n  );\n};\n\nexport default Popup;\n","import React from 'react';\n\nimport Checkbox, { CheckboxProps } from 'components/checkbox';\n\ntype Props = {} & CheckboxProps;\n\nconst Radio: React.FC<Props> = (props) => {\n  return <Checkbox {...props} type=\"radio\" />;\n};\n\nexport default Radio;\n","import { useCallback, useMemo, useState } from 'react';\nimport map from 'lodash/map';\n\nimport Accordion from 'components/accordion';\nimport Radio from 'components/radio';\nimport useChangebleState from 'hooks/useChangebleState';\n\ntype Option<T = any> = {\n  title: string;\n  value: T;\n};\n\ntype Props<T = any> = {\n  label: string;\n  options: Option<T>[] | string[];\n  value?: T;\n  defaultValue?: T;\n  onChange?: (value: T) => void;\n  closeOnChange?: boolean;\n  className?: string;\n  splitIn?: number;\n};\n\nconst Select: React.FC<Props> = ({ label, options, defaultValue, value, onChange, closeOnChange, className, splitIn }) => {\n  const [open, setOpen] = useState(false);\n  const [val, setVal] = useChangebleState(value || defaultValue);\n  const opts = useMemo(\n    () =>\n      Array.isArray(options) ? options.map((option, idx) => (typeof option === 'string' ? { title: option, value: idx } : option)) : [],\n    [options],\n  );\n  const selectedOption = useMemo(() => opts.find((o) => o.value === val), [opts, val]);\n\n  const handleChanged = useCallback(\n    (value) => {\n      setVal(value);\n      onChange?.(value);\n\n      if (closeOnChange) {\n        setOpen(false);\n      }\n    },\n    [setVal, onChange, closeOnChange],\n  );\n  const handleChecked = useCallback(\n    (option: Option) => (checked: boolean) => {\n      if (checked) {\n        handleChanged(option.value);\n      }\n    },\n    [handleChanged],\n  );\n\n  return (\n    <Accordion open={open} onToggle={setOpen} title={label} subtitle={selectedOption?.title} className={className}>\n      <div className=\"flex flex-wrap\">\n        {map(opts, (opt) => (\n          <Radio\n            key={opt.value}\n            className={splitIn ? `w-1/${splitIn}` : 'w-full'}\n            checked={opt.value === val}\n            onChange={handleChecked(opt)}\n          >\n            {opt.title}\n          </Radio>\n        ))}\n      </div>\n    </Accordion>\n  );\n};\n\nexport default Select;\n","class WebVTTConverter {\n  resource: Blob;\n\n  private objectURL?: string;\n\n  constructor(resource: Blob) {\n    this.resource = resource;\n  }\n\n  blobToBuffer() {\n    return new Promise<ArrayBuffer>((resolve, reject) => {\n      const reader = new FileReader();\n      reader.addEventListener('loadend', (event) => {\n        const buf = event.target?.result;\n        resolve(new Uint8Array(buf as ArrayBuffer));\n      });\n      reader.addEventListener('error', () => reject('Error while reading the Blob object'));\n      reader.readAsArrayBuffer(this.resource);\n    });\n  }\n\n  static blobToString(blob: Blob, success: (text: string) => void, fail: () => void) {\n    const reader = new FileReader();\n    reader.addEventListener('loadend', (event) => {\n      const text = event.target?.result;\n      success(text as string);\n    });\n    reader.addEventListener('error', () => fail());\n    reader.readAsText(blob);\n  }\n\n  /**\n   * @param {*} utf8str\n   */\n  static toVTT(utf8str: string) {\n    return utf8str\n      .replace(/\\{\\\\([ibu])\\}/g, '</$1>')\n      .replace(/\\{\\\\([ibu])1\\}/g, '<$1>')\n      .replace(/\\{([ibu])\\}/g, '<$1>')\n      .replace(/\\{\\/([ibu])\\}/g, '</$1>')\n      .replace(/(\\d\\d:\\d\\d:\\d\\d),(\\d\\d\\d)/g, '$1.$2')\n      .concat('\\r\\n\\r\\n');\n  }\n\n  static toTypedArray(str: string) {\n    const result: number[] = [];\n    str.split('').forEach((each) => {\n      result.push(parseInt(`${each.charCodeAt(0)}`, 16));\n    });\n    return Uint8Array.from(result);\n  }\n\n  getURL() {\n    return new Promise<string>((resolve, reject) => {\n      if (!(this.resource instanceof Blob)) return reject('Expecting resource to be a Blob but something else found.');\n      if (!FileReader) return reject('No FileReader constructor found');\n      if (!TextDecoder) return reject('No TextDecoder constructor found');\n      return WebVTTConverter.blobToString(\n        this.resource,\n        (decoded) => {\n          const vttString = 'WEBVTT FILE\\r\\n\\r\\n';\n          const text = vttString.concat(WebVTTConverter.toVTT(decoded));\n          const blob = new Blob([text], { type: 'text/vtt' });\n          this.objectURL = URL.createObjectURL(blob);\n\n          return resolve(this.objectURL);\n        },\n        () => {\n          this.blobToBuffer().then((buffer) => {\n            const utf8str = new TextDecoder('utf-8').decode(buffer);\n            const vttString = 'WEBVTT FILE\\r\\n\\r\\n';\n            const text = vttString.concat(WebVTTConverter.toVTT(utf8str));\n            const blob = new Blob([text], { type: 'text/vtt' });\n            this.objectURL = URL.createObjectURL(blob);\n\n            return resolve(this.objectURL);\n          });\n        },\n      );\n    });\n  }\n\n  release() {\n    URL.createObjectURL(this.objectURL);\n  }\n}\n\nexport async function convertToVTT(src: string) {\n  const file = await (await fetch(src)).blob();\n  const converter = new WebVTTConverter(file);\n\n  return converter.getURL();\n}\n","import React, { useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport cx from 'classnames';\nimport HLS from 'hls.js';\nimport find from 'lodash/find';\nimport forEach from 'lodash/forEach';\nimport uniqBy from 'lodash/uniqBy';\n\nimport useStorageState from 'hooks/useStorageState';\n\nimport { convertToVTT } from 'utils/subtitles';\n\nexport type AudioTrack = {\n  name: string;\n  lang: string;\n  default?: boolean;\n};\n\nexport type SourceTrack = {\n  src: string;\n  type: string;\n  name: string;\n};\n\nexport type SubtitleTrack = {\n  src: string;\n  name: string;\n  lang: string;\n};\n\nexport type StreamingType = 'http' | 'hls' | 'hls2' | 'hls4';\n\ntype OwnProps = {\n  autoPlay?: boolean;\n  audioTracks?: AudioTrack[];\n  sourceTracks?: SourceTrack[];\n  subtitleTracks?: SubtitleTrack[];\n  streamingType?: StreamingType;\n  isSettingsOpen?: boolean;\n  onUpdate?: () => void;\n  mediaComponent?: string;\n};\n\nexport type MediaRef = {\n  play: () => Promise<void>;\n  pause: () => void;\n  playPause: () => Promise<void>;\n  load: () => void;\n  currentTime: number;\n  playbackRate: number;\n  audioTracks?: AudioTrack[];\n  audioTrack?: string;\n  sourceTracks?: SourceTrack[];\n  sourceTrack?: string;\n  subtitleTracks?: SubtitleTrack[];\n  subtitleTrack?: string;\n  readonly duration: number;\n  readonly error: boolean;\n  readonly loading: boolean;\n  readonly paused: boolean;\n  readonly proportionLoaded: number;\n  readonly proportionPlayed: number;\n};\n\nfunction useVideoPlayer({ autoPlay, audioTracks, sourceTracks, subtitleTracks, streamingType, isSettingsOpen }: OwnProps) {\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const hlsRef = useRef<HLS | null>(null);\n  const startTimeRef = useRef(0);\n  const isSettingsOpenRef = useRef(false);\n  const [isHLSJSActive] = useStorageState<boolean>('is_hls.js_active');\n  const [currentAudioTrack, setCurrentAudioTrack] = useState<AudioTrack>(\n    () => (audioTracks?.find((audioTrack) => audioTrack.default) || audioTracks?.[0])!,\n  );\n  const [currentSourceTrack, setCurrentSourceTrack] = useState<SourceTrack>(sourceTracks?.[0]!);\n  const [currentSubtitleTrack, setCurrentSubtitleTrack] = useState<SubtitleTrack | null>(null);\n\n  const getAudioTracks = useCallback(() => (streamingType === 'hls2' ? [] : audioTracks), [audioTracks, streamingType]);\n  const getAudioTrack = useCallback(() => currentAudioTrack?.name, [currentAudioTrack]);\n  const setAudioTrack = useCallback(\n    (audioTrackName: string) => {\n      const audioTrack = audioTracks?.find((audioTrack) => audioTrack.name === audioTrackName);\n      if (audioTrack) {\n        setCurrentAudioTrack(audioTrack);\n      }\n    },\n    [audioTracks],\n  );\n  const getSourceTracks = useCallback(() => uniqBy(sourceTracks, 'src'), [sourceTracks]);\n  const getSourceTrack = useCallback(() => currentSourceTrack?.name, [currentSourceTrack]);\n  const setSourceTrack = useCallback(\n    (sourceTrackName: string) => {\n      const sourceTrack = sourceTracks?.find((sourceTrack) => sourceTrack.name === sourceTrackName);\n      if (sourceTrack) {\n        setCurrentSourceTrack(sourceTrack);\n      }\n    },\n    [sourceTracks],\n  );\n  const getSubtitleTracks = useCallback(() => subtitleTracks, [subtitleTracks]);\n  const getSubtitleTrack = useCallback(() => currentSubtitleTrack?.name, [currentSubtitleTrack]);\n  const setSubtitleTrack = useCallback(\n    (subtitleTrackName?: string) => {\n      const subtitleTrack = subtitleTracks?.find((subtitleTrack) => subtitleTrack.name === subtitleTrackName);\n      setCurrentSubtitleTrack(subtitleTrack || null);\n    },\n    [subtitleTracks],\n  );\n\n  const currentAudioTrackIndex = useMemo(\n    () => audioTracks?.findIndex((audioTrack) => audioTrack.name === currentAudioTrack.name) ?? 0,\n    [audioTracks, currentAudioTrack],\n  );\n  const currentSrc = useMemo(\n    () =>\n      streamingType === 'hls'\n        ? currentSourceTrack?.src.replace(/master-v1a\\d/, `master-v1a${currentAudioTrackIndex + 1}`)\n        : currentSourceTrack?.src,\n    [streamingType, currentAudioTrackIndex, currentSourceTrack?.src],\n  );\n\n  const handleMediaLoaded = useCallback(() => {\n    if (videoRef.current) {\n      videoRef.current.removeEventListener('canplay', handleMediaLoaded);\n\n      // clear existing subtitles\n      while (videoRef.current.firstChild) {\n        // @ts-expect-error\n        videoRef.current.lastChild.track.mode = 'disabled';\n        videoRef.current.removeChild(videoRef.current.lastChild!);\n      }\n\n      if (hlsRef.current) {\n        const audioTrack = find(hlsRef.current.audioTracks, (audioTrack) => audioTrack.name === currentAudioTrack?.name);\n\n        if (audioTrack) {\n          hlsRef.current.audioTrack = audioTrack.id;\n        }\n      } else {\n        // Do not change audio if we don't have it (mostly on HLS)\n        // @ts-expect-error\n        if (videoRef.current.audioTracks?.[currentAudioTrackIndex]) {\n          // @ts-expect-error\n          forEach(videoRef.current.audioTracks, (audioTrack, idx: number) => {\n            audioTrack.enabled = idx === currentAudioTrackIndex;\n          });\n        }\n      }\n\n      if (startTimeRef.current > 0) {\n        videoRef.current.currentTime = startTimeRef.current;\n\n        if (isSettingsOpenRef.current) {\n          videoRef.current.pause();\n        } else {\n          videoRef.current.play();\n        }\n      } else if (autoPlay) {\n        videoRef.current.play();\n      }\n\n      if (currentSubtitleTrack) {\n        const addSubtitleTrack = (src: string) => {\n          if (videoRef.current) {\n            const track = document.createElement('track');\n            videoRef.current.appendChild(track);\n\n            track.src = src;\n            track.kind = 'captions';\n            track.id = currentSubtitleTrack.name;\n            track.label = currentSubtitleTrack.name;\n            track.srclang = currentSubtitleTrack.lang;\n\n            track.track.mode = 'showing';\n          }\n        };\n\n        if (currentSubtitleTrack.src.endsWith('.srt')) {\n          convertToVTT(currentSubtitleTrack.src).then(addSubtitleTrack);\n        } else {\n          addSubtitleTrack(currentSubtitleTrack.src);\n        }\n      }\n    }\n  }, [autoPlay, currentAudioTrackIndex, currentAudioTrack?.name, currentSubtitleTrack]);\n\n  useEffect(() => {\n    if (videoRef.current && currentSrc) {\n      if (isHLSJSActive !== false && currentSrc.includes('.m3u8') && HLS.isSupported()) {\n        const hls = (hlsRef.current = new HLS({\n          enableWebVTT: false,\n          enableCEA708Captions: false,\n        }));\n        hls.attachMedia(videoRef.current);\n        hls.on(HLS.Events.MEDIA_ATTACHED, () => {\n          hls.loadSource(currentSrc);\n        });\n      } else {\n        videoRef.current.src = currentSrc;\n      }\n\n      videoRef.current.addEventListener('canplay', handleMediaLoaded);\n    }\n\n    return () => {\n      if (videoRef.current) {\n        if (videoRef.current.currentTime > 0) {\n          // eslint-disable-next-line\n          startTimeRef.current = videoRef.current.currentTime;\n        }\n        // eslint-disable-next-line\n        videoRef.current.removeEventListener('canplay', handleMediaLoaded);\n      }\n      if (hlsRef.current) {\n        hlsRef.current.destroy();\n        hlsRef.current = null;\n      }\n    };\n  }, [\n    currentSrc,\n    videoRef,\n    startTimeRef,\n    handleMediaLoaded,\n    isHLSJSActive,\n    streamingType,\n    currentAudioTrack,\n    currentSourceTrack,\n    currentSubtitleTrack,\n    currentAudioTrackIndex,\n    audioTracks,\n  ]);\n\n  useEffect(() => {\n    isSettingsOpenRef.current = Boolean(isSettingsOpen);\n  }, [isSettingsOpen]);\n\n  return useMemo(\n    () => ({\n      videoRef: videoRef,\n      getAudioTracks,\n      getAudioTrack,\n      setAudioTrack,\n      getSourceTracks,\n      getSourceTrack,\n      setSourceTrack,\n      getSubtitleTracks,\n      getSubtitleTrack,\n      setSubtitleTrack,\n    }),\n    [\n      videoRef,\n      getAudioTracks,\n      getAudioTrack,\n      setAudioTrack,\n      getSourceTracks,\n      getSourceTrack,\n      setSourceTrack,\n      getSubtitleTracks,\n      getSubtitleTrack,\n      setSubtitleTrack,\n    ],\n  );\n}\n\nfunction useVideoPlayerApi(ref: React.ForwardedRef<MediaRef>, props: OwnProps) {\n  const player = useVideoPlayer(props);\n  const videoRef = player.videoRef;\n\n  const getCurrentTime = useCallback(() => {\n    if (videoRef.current) {\n      return videoRef.current.currentTime;\n    }\n    return 0;\n  }, [videoRef]);\n  const setCurrentTime = useCallback(\n    (currentTime: number) => {\n      if (videoRef.current) {\n        videoRef.current.currentTime = currentTime;\n      }\n    },\n    [videoRef],\n  );\n  const getPlaybackRate = useCallback(() => {\n    if (videoRef.current) {\n      return videoRef.current.playbackRate;\n    }\n    return 1;\n  }, [videoRef]);\n  const setPlaybackRate = useCallback(\n    (playbackRate: number) => {\n      if (videoRef.current) {\n        videoRef.current.playbackRate = playbackRate;\n      }\n    },\n    [videoRef],\n  );\n  const getPaused = useCallback(() => {\n    if (videoRef.current) {\n      return videoRef.current.paused;\n    }\n    return false;\n  }, [videoRef]);\n  const getDuration = useCallback(() => {\n    if (videoRef.current) {\n      return videoRef.current.duration;\n    }\n    return 0;\n  }, [videoRef]);\n  const getError = useCallback(() => {\n    if (videoRef.current) {\n      return videoRef.current.networkState === videoRef.current.NETWORK_NO_SOURCE;\n    }\n    return false;\n  }, [videoRef]);\n  const getLoading = useCallback(() => {\n    if (videoRef.current) {\n      return videoRef.current.readyState < videoRef.current.HAVE_ENOUGH_DATA;\n    }\n    return true;\n  }, [videoRef]);\n  const getProportionLoaded = useCallback(() => {\n    if (videoRef.current) {\n      return (\n        videoRef.current.buffered.length && videoRef.current.buffered.end(videoRef.current.buffered.length - 1) / videoRef.current.duration\n      );\n    }\n    return 0;\n  }, [videoRef]);\n  const getProportionPlayed = useCallback(() => {\n    if (videoRef.current) {\n      return videoRef.current.currentTime / videoRef.current.duration;\n    }\n    return 0;\n  }, [videoRef]);\n  const play = useCallback(async () => {\n    await videoRef.current?.play();\n  }, [videoRef]);\n  const pause = useCallback(() => {\n    videoRef.current?.pause();\n  }, [videoRef]);\n  const playPause = useCallback(async () => {\n    if (getPaused()) {\n      await play();\n    } else {\n      pause();\n    }\n  }, [play, pause, getPaused]);\n  const load = useCallback(() => {\n    videoRef.current?.load();\n  }, [videoRef]);\n\n  const api = useMemo<MediaRef>(\n    () => ({\n      play,\n      pause,\n      playPause,\n      load,\n      get currentTime() {\n        return getCurrentTime();\n      },\n      set currentTime(currentTime) {\n        setCurrentTime(currentTime);\n      },\n      get audioTracks() {\n        return player.getAudioTracks();\n      },\n      get audioTrack() {\n        return player.getAudioTrack();\n      },\n      set audioTrack(audioTrack) {\n        player.setAudioTrack(audioTrack);\n      },\n      get sourceTracks() {\n        return player.getSourceTracks();\n      },\n      get sourceTrack() {\n        return player.getSourceTrack();\n      },\n      set sourceTrack(sourceTrack) {\n        player.setSourceTrack(sourceTrack);\n      },\n      get subtitleTracks() {\n        return player.getSubtitleTracks();\n      },\n      get subtitleTrack() {\n        return player.getSubtitleTrack();\n      },\n      set subtitleTrack(subtitleTrack) {\n        player.setSubtitleTrack(subtitleTrack);\n      },\n      get playbackRate() {\n        return getPlaybackRate();\n      },\n      set playbackRate(playbackRate) {\n        setPlaybackRate(playbackRate);\n      },\n      get paused() {\n        return getPaused();\n      },\n      get duration() {\n        return getDuration();\n      },\n      get error() {\n        return getError();\n      },\n      get loading() {\n        return getLoading();\n      },\n      get proportionLoaded() {\n        return getProportionLoaded();\n      },\n      get proportionPlayed() {\n        return getProportionPlayed();\n      },\n    }),\n    [\n      player,\n      play,\n      pause,\n      playPause,\n      load,\n      getCurrentTime,\n      setCurrentTime,\n      getPlaybackRate,\n      setPlaybackRate,\n      getPaused,\n      getDuration,\n      getError,\n      getLoading,\n      getProportionLoaded,\n      getProportionPlayed,\n    ],\n  );\n\n  useImperativeHandle(ref, () => api, [api]);\n\n  return useMemo(\n    () => ({\n      api,\n      player,\n    }),\n    [api, player],\n  );\n}\n\nconst MEDIA_EVENTS = [\n  'onAbort',\n  'onCanPlay',\n  'onCanPlayThrough',\n  'onDurationChange',\n  'onEmptied',\n  'onEncrypted',\n  'onEnded',\n  'onError',\n  'onLoadedData',\n  'onLoadedMetadata',\n  'onLoadStart',\n  'onPause',\n  'onPlay',\n  'onPlaying',\n  'onProgress',\n  'onRateChange',\n  'onSeeked',\n  'onSeeking',\n  'onStalled',\n  'onSuspend',\n  'onTimeUpdate',\n  'onVolumeChange',\n  'onWaiting',\n] as const;\n\ntype MediaEvents = keyof typeof MEDIA_EVENTS;\n\nexport type MediaProps = OwnProps & React.HTMLAttributes<HTMLVideoElement>;\n\nconst Media = React.forwardRef<MediaRef, MediaProps>(\n  (\n    { autoPlay, audioTracks, sourceTracks, subtitleTracks, streamingType, isSettingsOpen, onUpdate, className, mediaComponent, ...props },\n    ref,\n  ) => {\n    const handleUpdate = useCallback(() => {\n      onUpdate?.();\n    }, [onUpdate]);\n    const eventProps = useMemo(\n      () =>\n        MEDIA_EVENTS.reduce<Partial<Record<MediaEvents, Function>>>(\n          (result, event) => ({\n            ...result,\n            [event]: (...args: any[]) => {\n              handleUpdate();\n              // @ts-expect-error\n              props[event]?.(...args);\n            },\n          }),\n          {},\n        ),\n      [props, handleUpdate],\n    );\n    const { player } = useVideoPlayerApi(ref, { autoPlay, audioTracks, sourceTracks, subtitleTracks, streamingType, isSettingsOpen });\n\n    return <video {...props} {...eventProps} autoPlay={false} className={cx('w-screen h-screen', className)} ref={player.videoRef} />;\n  },\n);\n\nexport default Media;\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { VideoPlayerBase } from '@enact/moonstone/VideoPlayer';\nimport map from 'lodash/map';\n\nimport { AudioTrack, SourceTrack, SubtitleTrack } from 'components/media';\nimport Popup from 'components/popup';\nimport Select from 'components/select';\n\nconst NONE = 'NONE';\n\ntype Props = {\n  visible: boolean;\n  onClose: () => void;\n  player: React.MutableRefObject<VideoPlayerBase | undefined>;\n};\n\nconst Settings: React.FC<Props> = ({ visible, onClose, player }) => {\n  const [isOpen, setIsOpen] = useState(visible);\n  const [audios, setAudios] = useState<AudioTrack[]>([]);\n  const [currentAudio, setCurrentAudio] = useState<string | null>(null);\n  const [sources, setSources] = useState<SourceTrack[]>([]);\n  const [currentSource, setCurrentSource] = useState<string | null>(null);\n  const [subtitles, setSubtitles] = useState<SubtitleTrack[]>([]);\n  const [currentSubtitle, setCurrentSubtitle] = useState<string | null>(NONE);\n\n  const audioOptions = useMemo(() => map(audios, (audio) => ({ title: audio.name, value: audio.name })), [audios]);\n  const sourceOptions = useMemo(() => map(sources, (source) => ({ title: source.name, value: source.name })), [sources]);\n  const subtitleOptions = useMemo(\n    () => [{ title: 'Нет', value: NONE }, ...map(subtitles, (subtitle) => ({ title: subtitle.name, value: subtitle.name }))],\n    [subtitles],\n  );\n\n  const handleVideoUpdate = useCallback(\n    (name: string, value: string) => {\n      if (player.current) {\n        const video: any = player.current.getVideoNode();\n\n        video[name] = value;\n      }\n    },\n    [player],\n  );\n\n  const handleAudioChange = useCallback(\n    (audio: string) => {\n      setCurrentAudio(audio);\n      handleVideoUpdate('audioTrack', audio);\n    },\n    [handleVideoUpdate],\n  );\n  const handleSourceChange = useCallback(\n    (source: string) => {\n      setCurrentSource(source);\n      handleVideoUpdate('sourceTrack', source);\n    },\n    [handleVideoUpdate],\n  );\n  const handleSubtitleChange = useCallback(\n    (subtitle: string) => {\n      setCurrentSubtitle(subtitle);\n      handleVideoUpdate('subtitleTrack', subtitle);\n    },\n    [handleVideoUpdate],\n  );\n\n  const handleClose = useCallback(() => {\n    onClose();\n  }, [onClose]);\n\n  useEffect(() => {\n    if (visible && player.current) {\n      const video: any = player.current.getVideoNode();\n      const { audioTracks, audioTrack, sourceTracks, sourceTrack, subtitleTracks, subtitleTrack } = video;\n\n      if (audioTracks?.length > 1 || sourceTracks?.length > 1 || subtitleTracks?.length > 0) {\n        setAudios(audioTracks);\n        setCurrentAudio(audioTrack);\n\n        setSources(sourceTracks);\n        setCurrentSource(sourceTrack);\n\n        setSubtitles(subtitleTracks);\n        setCurrentSubtitle(subtitleTrack || NONE);\n      } else {\n        handleClose();\n      }\n    }\n  }, [visible, player, handleClose]);\n\n  useEffect(() => {\n    let timeoutId: NodeJS.Timeout;\n\n    if (visible) {\n      timeoutId = setTimeout(() => {\n        setIsOpen(true);\n      }, 100);\n    } else {\n      setIsOpen(false);\n    }\n\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  }, [visible]);\n\n  return (\n    <Popup visible={isOpen} onClose={handleClose}>\n      {audioOptions.length > 1 && (\n        <Select\n          className=\"my-4\"\n          label=\"Звук\"\n          value={currentAudio}\n          options={audioOptions}\n          onChange={handleAudioChange}\n          splitIn={2}\n          closeOnChange\n        />\n      )}\n      {sourceOptions.length > 1 && (\n        <Select\n          className=\"my-4\"\n          label=\"Качество\"\n          value={currentSource}\n          options={sourceOptions}\n          onChange={handleSourceChange}\n          splitIn={5}\n          closeOnChange\n        />\n      )}\n      {subtitleOptions.length > 1 && (\n        <Select\n          className=\"my-4\"\n          label=\"Субтитры\"\n          value={currentSubtitle}\n          options={subtitleOptions}\n          onChange={handleSubtitleChange}\n          splitIn={5}\n          closeOnChange\n        />\n      )}\n    </Popup>\n  );\n};\n\nexport default Settings;\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { VideoPlayerBase } from '@enact/moonstone/VideoPlayer';\n\nimport Button from 'components/button';\n\nimport { secondsToDuration } from 'utils/date';\n\ntype Props = {\n  player: React.MutableRefObject<VideoPlayerBase | undefined>;\n  startTime?: number;\n  startInDelay?: number;\n};\n\nconst StartFrom: React.FC<Props> = ({ startTime, startInDelay = 5, player }) => {\n  const [visible, setVisible] = useState(true);\n  const [startIn, setStartIn] = useState(startInDelay);\n  const startFrom = useMemo(() => secondsToDuration(startTime), [startTime]);\n\n  const handleStartFromClick = useCallback(() => {\n    if (player.current) {\n      setVisible(false);\n      const video: any = player.current.getVideoNode();\n\n      video.currentTime = startTime;\n    }\n  }, [startTime, player]);\n  const handleStartFromBeginingClick = useCallback(() => {\n    setVisible(false);\n  }, []);\n\n  useEffect(() => {\n    let intervalId: NodeJS.Timeout;\n\n    if (visible) {\n      intervalId = setInterval(() => {\n        setStartIn((prevStartIn) => {\n          const newStartIn = prevStartIn - 1;\n\n          if (newStartIn <= 0) {\n            handleStartFromClick();\n          }\n\n          return newStartIn;\n        });\n      }, 1000);\n    }\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, [visible, handleStartFromClick]);\n\n  if (!startTime || !visible) {\n    return null;\n  }\n\n  return (\n    <div className=\"flex justify-center absolute w-full z-101 bottom-32\">\n      <Button onClick={handleStartFromClick}>\n        Смотреть с {startFrom} через {startIn}\n      </Button>\n      <Button autoFocus onClick={handleStartFromBeginingClick}>\n        Смотреть с начала\n      </Button>\n    </div>\n  );\n};\n\nexport default StartFrom;\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport VideoPlayer, { VideoPlayerBase, VideoPlayerBaseProps } from '@enact/moonstone/VideoPlayer';\n\nimport Button from 'components/button';\nimport Media, { AudioTrack, SourceTrack, StreamingType, SubtitleTrack } from 'components/media';\nimport Text from 'components/text';\nimport useButtonEffect from 'hooks/useButtonEffect';\n\nimport Settings from './settings';\nimport StartFrom from './startFrom';\n\nexport type PlayerProps = {\n  title: string;\n  description?: string;\n  poster: string;\n  audios?: AudioTrack[];\n  sources: SourceTrack[];\n  subtitles?: SubtitleTrack[];\n  startTime?: number;\n  timeSyncInterval?: number;\n  streamingType?: StreamingType;\n  onPlay?: () => void;\n  onPause?: (currentTime: number) => void;\n  onEnded?: (currentTime: number) => void;\n  onTimeSync?: (currentTime: number) => void | Promise<void>;\n} & VideoPlayerBaseProps;\n\nconst Player: React.FC<PlayerProps> = ({\n  title,\n  description,\n  poster,\n  audios,\n  sources,\n  subtitles,\n  startTime,\n  timeSyncInterval = 30,\n  streamingType,\n  onPlay,\n  onPause,\n  onEnded,\n  onTimeSync,\n  ...props\n}) => {\n  const playerRef = useRef<VideoPlayerBase>();\n  const [isPaused, setIsPaused] = useState(true);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n\n  const handlePlay = useCallback(() => {\n    setIsPaused(false);\n    setIsSettingsOpen(false);\n    onPlay?.();\n  }, [onPlay]);\n  const handlePause = useCallback(\n    (e) => {\n      setIsPaused(true);\n      onPause?.(e.currentTime);\n    },\n    [onPause],\n  );\n  const handleEnded = useCallback(\n    (e) => {\n      onEnded?.(e.target.currentTime);\n    },\n    [onEnded],\n  );\n  const handleTimeSync = useCallback(async () => {\n    if (playerRef.current && onTimeSync) {\n      const video: any = playerRef.current.getVideoNode();\n\n      const currentTime = video['currentTime'];\n\n      await onTimeSync(currentTime);\n    }\n  }, [onTimeSync, playerRef]);\n  const handleLoadedMetadata = useCallback(() => {\n    setIsLoaded(true);\n  }, []);\n  const handleSettingsOpen = useCallback(() => {\n    if (playerRef.current) {\n      setIsSettingsOpen(true);\n\n      const video: any = playerRef.current.getVideoNode();\n      video.pause();\n    }\n  }, [playerRef]);\n  const handleSettingsClose = useCallback(() => {\n    if (playerRef.current) {\n      setIsSettingsOpen(false);\n\n      const video: any = playerRef.current.getVideoNode();\n      video.play();\n    }\n  }, []);\n  const handlePauseButton = useCallback(() => {\n    if (playerRef.current) {\n      const video: any = playerRef.current.getVideoNode();\n      video.pause();\n    }\n  }, [playerRef]);\n\n  useEffect(() => {\n    let timeoutId: NodeJS.Timeout;\n\n    if (isPaused) {\n      timeoutId = setTimeout(() => {\n        setIsPaused(false);\n      }, 5 * 1000);\n    }\n\n    return () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, [isPaused]);\n\n  useEffect(() => {\n    let intervalId: NodeJS.Timeout;\n\n    if (onTimeSync) {\n      intervalId = setInterval(handleTimeSync, timeSyncInterval * 1000);\n    }\n\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n    };\n  }, [timeSyncInterval, onTimeSync, handleTimeSync]);\n\n  useButtonEffect('Back', handleTimeSync);\n  useButtonEffect('Blue', handleSettingsOpen);\n  useButtonEffect('Play', handleSettingsClose);\n  useButtonEffect('Pause', handlePauseButton);\n  useButtonEffect('ArrowUp', handleSettingsOpen);\n\n  return (\n    <>\n      <Settings visible={isSettingsOpen} onClose={handleSettingsClose} player={playerRef} />\n      {isPaused && <Text className=\"absolute z-10 top-0 p-4\">{title}</Text>}\n      {isPaused && (\n        <Button className=\"absolute z-101 bottom-8 right-10 text-blue-600\" icon=\"settings\" iconOnly onClick={handleSettingsOpen} />\n      )}\n      {isLoaded && startTime! > 0 && <StartFrom startTime={startTime} player={playerRef} />}\n\n      <VideoPlayer\n        {...props}\n        //@ts-expect-error\n        ref={playerRef}\n        locale=\"ru\"\n        poster={poster}\n        title={description}\n        jumpBy={15}\n        onPlay={handlePlay}\n        onPause={handlePause}\n        onEnded={handleEnded}\n        onLoadedMetadata={handleLoadedMetadata}\n        streamingType={streamingType}\n        isSettingsOpen={isSettingsOpen}\n        audioTracks={audios}\n        sourceTracks={sources}\n        subtitleTracks={subtitles}\n        videoComponent={<Media />}\n      />\n    </>\n  );\n};\n\nexport default Player;\n"],"sourceRoot":""}