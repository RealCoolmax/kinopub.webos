{"version":3,"sources":["views/settings/settings.tsx","components/seo/seo.tsx","components/title/title.tsx","hooks/useApi.ts","components/button/button.tsx","hooks/useChangebleState.ts","components/checkbox/checkbox.tsx","components/accordion/accordion.tsx","components/radio/radio.tsx","components/select/select.tsx"],"names":["SettingBool","setting","onChange","className","defaultChecked","value","Bool","True","label","SettingList","options","useMemo","map","description","defaultValue","findIndex","selected","closeOnChange","SettingsView","data","useApi","deviceInfo","saveDeviceSettingsAsync","useApiMutation","deactivate","useState","newSettings","setNewSettings","useStorageState","isHLSJSActive","setIsHLSJSActive","isAC2ByDefaultActive","setIsAC2ByDefaultActive","useDeviceInfo","software","hardware","boolSettings","filter","device","settings","key","listSettings","handleHLSJSToogle","useCallback","checked","handleAC2ByDefaultToogle","handleBoolSettingToggle","a","False","handleListSettingSelect","id","handleSaveClick","window","location","reload","handleLogoutClick","title","updated","icon","onClick","user","profile","name","username","Math","floor","subscription","days","Seo","props","Helmet","defaultTitle","titleTemplate","Title","children","cx","as","method","params","client","ApiClient","query","useQuery","Button","iconOnly","autoFocus","wrapperRef","useRef","useEffect","frameId","requestAnimationFrame","current","node","focus","cancelAnimationFrame","ref","role","useChangebleState","initialState","state","setState","Checkbox","inputRef","handleChange","e","target","handleKeyPress","isKey","click","component","onKeyPress","type","Accordion","open","onToggle","subtitle","visible","setVisible","handleClick","newVisible","Radio","Select","splitIn","setOpen","val","setVal","opts","Array","isArray","option","idx","selectedOption","find","o","handleChanged","handleChecked","opt"],"mappings":"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","file":"static/js/22.fb70c182.chunk.js","sourcesContent":["import React, { useCallback, useMemo, useState } from 'react';\nimport filter from 'lodash/filter';\nimport findIndex from 'lodash/findIndex';\nimport map from 'lodash/map';\n\nimport { Bool, DeviceSettingBoolean, DeviceSettingList, DeviceSettingsParams } from 'api';\nimport Button from 'components/button';\nimport Checkbox from 'components/checkbox';\nimport Select from 'components/select';\nimport Seo from 'components/seo';\nimport Text from 'components/text';\nimport Title from 'components/title';\nimport useApi from 'hooks/useApi';\nimport useApiMutation from 'hooks/useApiMutation';\nimport useDeviceInfo from 'hooks/useDeviceInfo';\nimport useStorageState from 'hooks/useStorageState';\n\nconst SettingBool: React.FC<{ setting: DeviceSettingBoolean; onChange?: (checked: boolean) => void }> = ({ setting, onChange }) => {\n  return (\n    <Checkbox className=\"w-full\" defaultChecked={setting.value === Bool.True} onChange={onChange}>\n      {setting.label}\n    </Checkbox>\n  );\n};\n\nconst SettingList: React.FC<{ setting: DeviceSettingList; onChange?: (value: number) => void }> = ({ setting, onChange }) => {\n  const options = useMemo(\n    () => map(setting.value, (value) => `${value.label} ${value.description ? `(${value.description})` : ''}`),\n    [setting.value],\n  );\n\n  return (\n    <Select\n      defaultValue={findIndex(setting.value, (value) => value.selected === Bool.True)}\n      label={setting.label}\n      onChange={onChange}\n      options={options}\n      closeOnChange\n    />\n  );\n};\n\nconst SettingsView: React.FC = () => {\n  const { data } = useApi('user');\n  const { data: deviceInfo } = useApi('deviceInfo');\n  const { saveDeviceSettingsAsync } = useApiMutation('saveDeviceSettings');\n  const { deactivate } = useApiMutation('deactivate');\n  const [newSettings, setNewSettings] = useState<DeviceSettingsParams>({});\n  const [isHLSJSActive, setIsHLSJSActive] = useStorageState<boolean>('is_hls.js_active');\n  const [isAC2ByDefaultActive, setIsAC2ByDefaultActive] = useStorageState<boolean>('is_abc3_by_default_active');\n  const { software, hardware } = useDeviceInfo();\n\n  const boolSettings = useMemo(\n    () =>\n      filter(\n        map(deviceInfo?.device?.settings, (setting, key) => ({ ...setting, key })),\n        (setting: DeviceSettingBoolean) => typeof setting['type'] === 'undefined',\n      ) as (DeviceSettingBoolean & { key: string })[],\n    [deviceInfo?.device?.settings],\n  );\n  const listSettings = useMemo(\n    () =>\n      filter(\n        map(deviceInfo?.device?.settings, (setting, key) => ({ ...setting, key })),\n        (setting: DeviceSettingList) => setting['type'] === 'list',\n      ) as (DeviceSettingList & { key: string })[],\n    [deviceInfo?.device?.settings],\n  );\n\n  const handleHLSJSToogle = useCallback(\n    (checked: boolean) => {\n      setIsHLSJSActive(checked);\n    },\n    [setIsHLSJSActive],\n  );\n\n  const handleAC2ByDefaultToogle = useCallback(\n    (checked: boolean) => {\n      setIsAC2ByDefaultActive(checked);\n    },\n    [setIsAC2ByDefaultActive],\n  );\n  const handleBoolSettingToggle = useCallback(\n    (setting: typeof boolSettings[0]) => async (checked: boolean) => {\n      setNewSettings({ ...newSettings, [setting['key']]: checked ? Bool.True : Bool.False });\n    },\n    [newSettings],\n  );\n  const handleListSettingSelect = useCallback(\n    (setting: typeof listSettings[0]) => (value: number) => {\n      setNewSettings({ ...newSettings, [setting['key']]: setting.value[value].id });\n    },\n    [newSettings],\n  );\n\n  const handleSaveClick = useCallback(async () => {\n    await saveDeviceSettingsAsync([deviceInfo?.device.id!, newSettings]);\n\n    window.location.reload();\n  }, [newSettings, deviceInfo?.device, saveDeviceSettingsAsync]);\n  const handleLogoutClick = useCallback(() => {\n    deactivate([]);\n  }, [deactivate]);\n\n  return (\n    <>\n      <Seo title=\"Настройки устройства\" />\n      <div className=\"h-screen relative\">\n        <Title>Настройки устройства</Title>\n\n        <div className=\"flex flex-col\">\n          {deviceInfo?.device && (\n            <>\n              <div>\n                <div className=\"flex flex-wrap pb-4\" key={`bool-${deviceInfo?.device.updated}`}>\n                  {map(boolSettings, (setting) => (\n                    <div className=\"flex w-1/2 pr-4\" key={setting['key']}>\n                      <SettingBool setting={setting} onChange={handleBoolSettingToggle(setting)} />\n                    </div>\n                  ))}\n                </div>\n                <div className=\"flex flex-wrap pb-4\">\n                  <div className=\"flex w-1/2 pr-4\" key=\"use-hls.js\">\n                    <Checkbox className=\"w-full\" defaultChecked={isHLSJSActive !== false} onChange={handleHLSJSToogle}>\n                      Использовать HLS.js\n                    </Checkbox>\n                  </div>\n                  <div className=\"flex w-1/2 pr-4\" key=\"use-ac3_by_default\">\n                    <Checkbox className=\"w-full\" defaultChecked={isAC2ByDefaultActive} onChange={handleAC2ByDefaultToogle}>\n                      AC3 аудио по умолчанию\n                    </Checkbox>\n                  </div>\n                </div>\n                <div className=\"flex flex-wrap pb-4\" key={`list-${deviceInfo?.device.updated}`}>\n                  {map(listSettings, (setting) => (\n                    <div className=\"flex w-1/2 pr-4\" key={setting['key']}>\n                      <SettingList setting={setting} onChange={handleListSettingSelect(setting)} />\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              <div className=\"flex my-8\">\n                <Button icon=\"done\" onClick={handleSaveClick}>\n                  Сохранить\n                </Button>\n              </div>\n            </>\n          )}\n        </div>\n\n        <div className=\"flex justify-between absolute bottom-0 left-0 right-0 py-2\">\n          <div>\n            <Text>Пользователь</Text>\n            <div className=\"flex items-center\">\n              {data?.user && (\n                <Text className=\"mr-4\">\n                  {data.user.profile.name || data.user.username} ({Math.floor(data.user.subscription.days)} дн.)\n                </Text>\n              )}\n\n              <Button icon=\"logout\" onClick={handleLogoutClick}>\n                Выход\n              </Button>\n            </div>\n          </div>\n\n          <div className=\"flex flex-col items-end pr-4\">\n            <Text>{hardware}</Text>\n            <Text>{software}</Text>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default SettingsView;\n","import { Helmet, HelmetProps } from 'react-helmet';\n\ntype Props = {} & HelmetProps;\n\nconst Seo: React.FC<Props> = (props) => {\n  return <Helmet defaultTitle=\"Unknown\" titleTemplate=\"%s | Kinopub WebOS\" {...props} />;\n};\n\nexport default Seo;\n","import cx from 'classnames';\n\nimport Text, { TextProps } from 'components/text';\n\ntype Props = {} & TextProps;\n\nconst Title: React.FC<Props> = ({ children, className, ...props }) => {\n  if (!children) {\n    return null;\n  }\n\n  return (\n    <Text {...props} className={cx('flex justify-between items-center m-1 mb-3 min-h-9', className)} as=\"div\">\n      {children}\n    </Text>\n  );\n};\n\nexport default Title;\n","import { useMemo } from 'react';\nimport { UseQueryOptions, useQuery } from 'react-query';\n\nimport ApiClient from 'api';\n\ntype Unpromise<T> = T extends Promise<infer U> ? U : T;\n\nexport type Methods = {\n  [method in keyof ApiClient]: ApiClient[method] extends Function ? Unpromise<ReturnType<ApiClient[method]>> : never;\n};\n\nexport type Method = keyof ApiClient & string;\n\nfunction useApi<T extends Method>(\n  method: T,\n  params: Parameters<ApiClient[T]> = [] as Parameters<ApiClient[T]>,\n  options?: UseQueryOptions<Methods[T]>,\n) {\n  const client = useMemo(() => new ApiClient(), []);\n  const query = useQuery<Methods[T]>(\n    [method, ...params],\n    () =>\n      // @ts-expect-error\n      client[method](...params) as Methods[T],\n    options,\n  );\n\n  return query;\n}\n\nexport default useApi;\n","import { useEffect, useRef } from 'react';\nimport cx from 'classnames';\n\nimport Icon from 'components/icon';\nimport Spottable from 'components/spottable';\n\ntype Props = {\n  icon?: string;\n  iconOnly?: boolean;\n  autoFocus?: boolean;\n  className?: string;\n} & React.ComponentProps<typeof Spottable>;\n\nconst Button: React.FC<Props> = ({ icon, iconOnly, children, autoFocus, className, ...props }) => {\n  const wrapperRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    let frameId: number;\n\n    if (autoFocus) {\n      frameId = requestAnimationFrame(() => {\n        // @ts-expect-error\n        wrapperRef.current?.node?.focus();\n      });\n    }\n\n    return () => {\n      if (frameId) {\n        cancelAnimationFrame(frameId);\n      }\n    };\n  }, [wrapperRef, autoFocus]);\n\n  return (\n    <Spottable\n      {...props}\n      ref={wrapperRef}\n      className={cx('text-gray-200 whitespace-nowrap cursor-pointer rounded px-2 py-1', className)}\n      role=\"button\"\n    >\n      <div className=\"flex items-center\">\n        {icon && <Icon className={cx({ 'mr-2': !iconOnly })} name={icon} />}\n        {!iconOnly && children}\n      </div>\n    </Spottable>\n  );\n};\n\nexport default Button;\n","import { useEffect, useState } from 'react';\n\nfunction useChangebleState<T>(initialState?: T) {\n  const [state, setState] = useState(initialState);\n\n  useEffect(() => {\n    setState(initialState);\n  }, [initialState]);\n\n  return [state, setState] as const;\n}\n\nexport default useChangebleState;\n","import { useCallback, useRef } from 'react';\nimport React from 'react';\nimport cx from 'classnames';\n\nimport Spottable from 'components/spottable';\n\nimport { isKey } from 'utils/keyboard';\n\nexport type CheckboxProps = {\n  defaultChecked?: boolean;\n  checked?: boolean;\n  onChange?: (checked: boolean, e: React.ChangeEvent<HTMLInputElement>) => void;\n  className?: string;\n  type?: string;\n} & Omit<React.HTMLAttributes<HTMLInputElement>, 'onChange'>;\n\nconst Checkbox: React.FC<CheckboxProps> = ({ defaultChecked, checked, onChange, className, children, ...props }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const handleChange = useCallback<React.ChangeEventHandler<HTMLInputElement>>(\n    (e) => {\n      onChange?.(e.target.checked, e);\n    },\n    [onChange],\n  );\n  const handleKeyPress = useCallback((e: KeyboardEvent) => {\n    if (isKey(e, 'Enter')) {\n      inputRef.current?.click();\n    }\n  }, []);\n\n  return (\n    <Spottable\n      component=\"label\"\n      className={cx('text-gray-200 p-2', className)}\n      // @ts-expect-error\n      onKeyPress={handleKeyPress}\n      role=\"button\"\n    >\n      <div className=\"inline-flex items-center cursor-pointer\">\n        <input\n          type=\"checkbox\"\n          {...props}\n          ref={inputRef}\n          className=\"inline-block w-4 h-4\"\n          defaultChecked={defaultChecked}\n          checked={checked}\n          onChange={handleChange}\n        />\n        <span className=\"inline-block ml-2 whitespace-nowrap\">{children}</span>\n      </div>\n    </Spottable>\n  );\n};\n\nexport default Checkbox;\n","import { useCallback } from 'react';\nimport cx from 'classnames';\n\nimport Icon from 'components/icon';\nimport Spottable from 'components/spottable';\nimport Text from 'components/text';\nimport useChangebleState from 'hooks/useChangebleState';\n\ntype Props = {\n  title: string;\n  subtitle?: string;\n  className?: string;\n  open?: boolean;\n  onToggle?: (open: boolean) => void;\n};\n\nconst Accordion: React.FC<Props> = ({ open, onToggle, title, subtitle, className, children }) => {\n  const [visible, setVisible] = useChangebleState(open);\n\n  const handleClick = useCallback(() => {\n    const newVisible = !visible;\n    onToggle?.(newVisible);\n    setVisible(newVisible);\n  }, [visible, setVisible, onToggle]);\n\n  return (\n    <div className=\"flex flex-col w-full\">\n      <Spottable onClick={handleClick} className={cx('p-1 cursor-pointer', className)}>\n        <div className=\"flex flex-col\">\n          <div className=\"flex items-center\">\n            <Text>{title}</Text>\n\n            <Icon name={visible ? 'expand_less' : 'expand_more'} />\n          </div>\n          {!visible && subtitle && <Text className=\"mt-2\">{subtitle}</Text>}\n        </div>\n      </Spottable>\n      {visible && children}\n    </div>\n  );\n};\n\nexport default Accordion;\n","import React from 'react';\n\nimport Checkbox, { CheckboxProps } from 'components/checkbox';\n\ntype Props = {} & CheckboxProps;\n\nconst Radio: React.FC<Props> = (props) => {\n  return <Checkbox {...props} type=\"radio\" />;\n};\n\nexport default Radio;\n","import { useCallback, useMemo, useState } from 'react';\nimport map from 'lodash/map';\n\nimport Accordion from 'components/accordion';\nimport Radio from 'components/radio';\nimport useChangebleState from 'hooks/useChangebleState';\n\ntype Option<T = any> = {\n  title: string;\n  value: T;\n};\n\ntype Props<T = any> = {\n  label: string;\n  options: Option<T>[] | string[];\n  value?: T;\n  defaultValue?: T;\n  onChange?: (value: T) => void;\n  closeOnChange?: boolean;\n  className?: string;\n  splitIn?: number;\n};\n\nconst Select: React.FC<Props> = ({ label, options, defaultValue, value, onChange, closeOnChange, className, splitIn }) => {\n  const [open, setOpen] = useState(false);\n  const [val, setVal] = useChangebleState(value || defaultValue);\n  const opts = useMemo(\n    () =>\n      Array.isArray(options) ? options.map((option, idx) => (typeof option === 'string' ? { title: option, value: idx } : option)) : [],\n    [options],\n  );\n  const selectedOption = useMemo(() => opts.find((o) => o.value === val), [opts, val]);\n\n  const handleChanged = useCallback(\n    (value) => {\n      setVal(value);\n      onChange?.(value);\n\n      if (closeOnChange) {\n        setOpen(false);\n      }\n    },\n    [setVal, onChange, closeOnChange],\n  );\n  const handleChecked = useCallback(\n    (option: Option) => (checked: boolean) => {\n      if (checked) {\n        handleChanged(option.value);\n      }\n    },\n    [handleChanged],\n  );\n\n  return (\n    <Accordion open={open} onToggle={setOpen} title={label} subtitle={selectedOption?.title} className={className}>\n      <div className=\"flex flex-wrap\">\n        {map(opts, (opt) => (\n          <Radio\n            key={opt.value}\n            className={splitIn ? `w-1/${splitIn}` : 'w-full'}\n            checked={opt.value === val}\n            onChange={handleChecked(opt)}\n          >\n            {opt.title}\n          </Radio>\n        ))}\n      </div>\n    </Accordion>\n  );\n};\n\nexport default Select;\n"],"sourceRoot":""}