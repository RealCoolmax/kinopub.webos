{"version":3,"sources":["../node_modules/lodash/filter.js","../node_modules/react-query/es/react/QueryErrorResetBoundary.js","../node_modules/react-query/es/react/useBaseQuery.js","../node_modules/lodash/_baseFilter.js","../node_modules/lodash/_baseFindIndex.js","../node_modules/react-query/es/core/queryObserver.js","../node_modules/react-query/es/react/useQuery.js","../node_modules/lodash/findIndex.js","../node_modules/lodash/toInteger.js","../node_modules/lodash/toFinite.js","../node_modules/lodash/toNumber.js","../node_modules/lodash/_baseTrim.js","../node_modules/lodash/_trimmedEndIndex.js"],"names":["arrayFilter","require","baseFilter","baseIteratee","isArray","module","exports","collection","predicate","createValue","_isReset","clearReset","reset","isReset","QueryErrorResetBoundaryContext","React","createContext","useBaseQuery","options","Observer","mountedRef","useRef","forceUpdate","useState","queryClient","useQueryClient","errorResetBoundary","useContext","defaultedOptions","defaultQueryObserverOptions","optimisticResults","onError","notifyManager","batchCalls","onSuccess","onSettled","suspense","staleTime","useErrorBoundary","retryOnMount","observer","result","getOptimisticResult","useEffect","current","unsubscribe","subscribe","x","updateResult","setOptions","listeners","isLoading","fetchOptimistic","then","_ref","data","catch","error","undefined","isError","isFetching","notifyOnChangeProps","trackResult","baseEach","value","index","push","array","fromIndex","fromRight","length","QueryObserver","_Subscribable","client","_this","call","this","trackedProps","previousSelectError","bindMethods","_inheritsLoose","_proto","prototype","remove","bind","refetch","onSubscribe","currentQuery","addObserver","shouldFetchOnMount","executeFetch","updateTimers","onUnsubscribe","destroy","shouldFetchOnReconnect","query","enabled","refetchOnReconnect","isStale","shouldFetchOnWindowFocus","refetchOnWindowFocus","clearTimers","removeObserver","notifyOptions","prevOptions","prevQuery","Error","queryKey","updateQuery","mounted","hasListeners","shouldFetchOptionally","updateStaleTimeout","refetchInterval","updateRefetchInterval","getQueryCache","build","createResult","getCurrentResult","currentResult","_this2","trackedResult","Object","keys","forEach","key","defineProperty","configurable","enumerable","get","typedKey","includes","getNextResult","_this3","Promise","resolve","reject","throwOnError","getCurrentQuery","fetch","_this4","fetchOptions","_this5","promise","noop","_this6","clearStaleTimeout","isServer","isValidTimeout","timeout","timeUntilStale","dataUpdatedAt","staleTimeoutId","setTimeout","_this7","clearRefetchInterval","refetchIntervalId","setInterval","refetchIntervalInBackground","focusManager","isFocused","clearTimeout","clearInterval","prevResult","prevResultState","currentResultState","prevResultOptions","currentResultOptions","queryChange","queryInitialState","state","currentQueryInitialState","prevQueryResult","previousQueryResult","errorUpdatedAt","status","isPreviousData","isPlaceholderData","fetchOnMount","fetchOptionally","keepPreviousData","dataUpdateCount","isSuccess","select","structuralSharing","replaceEqualDeep","selectError","getLogger","Date","now","placeholderData","isIdle","failureCount","fetchFailureCount","isFetched","errorUpdateCount","isFetchedAfterMount","isLoadingError","isRefetchError","shouldNotifyListeners","_this$options","notifyOnChangePropsExclusions","includedProps","some","changed","isIncluded","isExcluded","shallowEqualObjects","defaultNotifyOptions","cache","notify","_extends","onQueryUpdate","action","type","isCancelledError","_this8","batch","listener","Subscribable","shouldLoadOnMount","refetchOnMount","shouldRefetchOnMount","isStaleByTime","useQuery","arg1","arg2","arg3","parsedOptions","parseQueryArgs","baseFindIndex","toInteger","nativeMax","Math","max","toFinite","remainder","toNumber","INFINITY","baseTrim","isObject","isSymbol","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","other","valueOf","isBinary","test","slice","trimmedEndIndex","reTrimStart","string","replace","reWhitespace","charAt"],"mappings":"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","file":"static/js/21.b5300685.chunk.js","sourcesContent":["var arrayFilter = require('./_arrayFilter'),\n    baseFilter = require('./_baseFilter'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n *\n * // Combining several predicates using `_.overEvery` or `_.overSome`.\n * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n * // => objects for ['fred', 'barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = filter;\n","import React from 'react'; // CONTEXT\n\nfunction createValue() {\n  var _isReset = false;\n  return {\n    clearReset: function clearReset() {\n      _isReset = false;\n    },\n    reset: function reset() {\n      _isReset = true;\n    },\n    isReset: function isReset() {\n      return _isReset;\n    }\n  };\n}\n\nvar QueryErrorResetBoundaryContext = /*#__PURE__*/React.createContext(createValue()); // HOOK\n\nexport var useQueryErrorResetBoundary = function useQueryErrorResetBoundary() {\n  return React.useContext(QueryErrorResetBoundaryContext);\n}; // COMPONENT\n\nexport var QueryErrorResetBoundary = function QueryErrorResetBoundary(_ref) {\n  var children = _ref.children;\n  var value = React.useMemo(function () {\n    return createValue();\n  }, []);\n  return /*#__PURE__*/React.createElement(QueryErrorResetBoundaryContext.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};","import React from 'react';\nimport { notifyManager } from '../core/notifyManager';\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary';\nimport { useQueryClient } from './QueryClientProvider';\nexport function useBaseQuery(options, Observer) {\n  var mountedRef = React.useRef(false);\n\n  var _React$useState = React.useState(0),\n      forceUpdate = _React$useState[1];\n\n  var queryClient = useQueryClient();\n  var errorResetBoundary = useQueryErrorResetBoundary();\n  var defaultedOptions = queryClient.defaultQueryObserverOptions(options); // Make sure results are optimistically set in fetching state before subscribing or updating options\n\n  defaultedOptions.optimisticResults = true; // Include callbacks in batch renders\n\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(defaultedOptions.onError);\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(defaultedOptions.onSuccess);\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(defaultedOptions.onSettled);\n  }\n\n  if (defaultedOptions.suspense) {\n    // Always set stale time when using suspense to prevent\n    // fetching again when directly mounting after suspending\n    if (typeof defaultedOptions.staleTime !== 'number') {\n      defaultedOptions.staleTime = 1000;\n    }\n  }\n\n  if (defaultedOptions.suspense || defaultedOptions.useErrorBoundary) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      defaultedOptions.retryOnMount = false;\n    }\n  }\n\n  var _React$useState2 = React.useState(function () {\n    return new Observer(queryClient, defaultedOptions);\n  }),\n      observer = _React$useState2[0];\n\n  var result = observer.getOptimisticResult(defaultedOptions);\n  React.useEffect(function () {\n    mountedRef.current = true;\n    errorResetBoundary.clearReset();\n    var unsubscribe = observer.subscribe(notifyManager.batchCalls(function () {\n      if (mountedRef.current) {\n        forceUpdate(function (x) {\n          return x + 1;\n        });\n      }\n    })); // Update result to make sure we did not miss any query updates\n    // between creating the observer and subscribing to it.\n\n    observer.updateResult();\n    return function () {\n      mountedRef.current = false;\n      unsubscribe();\n    };\n  }, [errorResetBoundary, observer]);\n  React.useEffect(function () {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setOptions(defaultedOptions, {\n      listeners: false\n    });\n  }, [defaultedOptions, observer]); // Handle suspense\n\n  if (defaultedOptions.suspense && result.isLoading) {\n    throw observer.fetchOptimistic(defaultedOptions).then(function (_ref) {\n      var data = _ref.data;\n      defaultedOptions.onSuccess == null ? void 0 : defaultedOptions.onSuccess(data);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(data, null);\n    }).catch(function (error) {\n      errorResetBoundary.clearReset();\n      defaultedOptions.onError == null ? void 0 : defaultedOptions.onError(error);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(undefined, error);\n    });\n  } // Handle error boundary\n\n\n  if ((defaultedOptions.suspense || defaultedOptions.useErrorBoundary) && result.isError && !result.isFetching) {\n    throw result.error;\n  } // Handle result property usage tracking\n\n\n  if (defaultedOptions.notifyOnChangeProps === 'tracked') {\n    result = observer.trackResult(result);\n  }\n\n  return result;\n}","var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { isServer, isValidTimeout, noop, replaceEqualDeep, shallowEqualObjects, timeUntilStale } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { focusManager } from './focusManager';\nimport { Subscribable } from './subscribable';\nimport { getLogger } from './logger';\nimport { isCancelledError } from './retryer';\nexport var QueryObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(QueryObserver, _Subscribable);\n\n  function QueryObserver(client, options) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n    _this.options = options;\n    _this.trackedProps = [];\n    _this.previousSelectError = null;\n\n    _this.bindMethods();\n\n    _this.setOptions(options);\n\n    return _this;\n  }\n\n  var _proto = QueryObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    this.remove = this.remove.bind(this);\n    this.refetch = this.refetch.bind(this);\n  };\n\n  _proto.onSubscribe = function onSubscribe() {\n    if (this.listeners.length === 1) {\n      this.currentQuery.addObserver(this);\n\n      if (shouldFetchOnMount(this.currentQuery, this.options)) {\n        this.executeFetch();\n      }\n\n      this.updateTimers();\n    }\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      this.destroy();\n    }\n  };\n\n  _proto.shouldFetchOnReconnect = function shouldFetchOnReconnect() {\n    return _shouldFetchOnReconnect(this.currentQuery, this.options);\n  };\n\n  _proto.shouldFetchOnWindowFocus = function shouldFetchOnWindowFocus() {\n    return _shouldFetchOnWindowFocus(this.currentQuery, this.options);\n  };\n\n  _proto.destroy = function destroy() {\n    this.listeners = [];\n    this.clearTimers();\n    this.currentQuery.removeObserver(this);\n  };\n\n  _proto.setOptions = function setOptions(options, notifyOptions) {\n    var prevOptions = this.options;\n    var prevQuery = this.currentQuery;\n    this.options = this.client.defaultQueryObserverOptions(options);\n\n    if (typeof this.options.enabled !== 'undefined' && typeof this.options.enabled !== 'boolean') {\n      throw new Error('Expected enabled to be a boolean');\n    } // Keep previous query key if the user does not supply one\n\n\n    if (!this.options.queryKey) {\n      this.options.queryKey = prevOptions.queryKey;\n    }\n\n    this.updateQuery();\n    var mounted = this.hasListeners(); // Fetch if there are subscribers\n\n    if (mounted && shouldFetchOptionally(this.currentQuery, prevQuery, this.options, prevOptions)) {\n      this.executeFetch();\n    } // Update result\n\n\n    this.updateResult(notifyOptions); // Update stale interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime)) {\n      this.updateStaleTimeout();\n    } // Update refetch interval if needed\n\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.refetchInterval !== prevOptions.refetchInterval)) {\n      this.updateRefetchInterval();\n    }\n  };\n\n  _proto.getOptimisticResult = function getOptimisticResult(options) {\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return this.createResult(query, defaultedOptions);\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.currentResult;\n  };\n\n  _proto.trackResult = function trackResult(result) {\n    var _this2 = this;\n\n    var trackedResult = {};\n    Object.keys(result).forEach(function (key) {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: function get() {\n          var typedKey = key;\n\n          if (!_this2.trackedProps.includes(typedKey)) {\n            _this2.trackedProps.push(typedKey);\n          }\n\n          return result[typedKey];\n        }\n      });\n    });\n    return trackedResult;\n  };\n\n  _proto.getNextResult = function getNextResult(options) {\n    var _this3 = this;\n\n    return new Promise(function (resolve, reject) {\n      var unsubscribe = _this3.subscribe(function (result) {\n        if (!result.isFetching) {\n          unsubscribe();\n\n          if (result.isError && (options == null ? void 0 : options.throwOnError)) {\n            reject(result.error);\n          } else {\n            resolve(result);\n          }\n        }\n      });\n    });\n  };\n\n  _proto.getCurrentQuery = function getCurrentQuery() {\n    return this.currentQuery;\n  };\n\n  _proto.remove = function remove() {\n    this.client.getQueryCache().remove(this.currentQuery);\n  };\n\n  _proto.refetch = function refetch(options) {\n    return this.fetch(options);\n  };\n\n  _proto.fetchOptimistic = function fetchOptimistic(options) {\n    var _this4 = this;\n\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return query.fetch().then(function () {\n      return _this4.createResult(query, defaultedOptions);\n    });\n  };\n\n  _proto.fetch = function fetch(fetchOptions) {\n    var _this5 = this;\n\n    return this.executeFetch(fetchOptions).then(function () {\n      _this5.updateResult();\n\n      return _this5.currentResult;\n    });\n  };\n\n  _proto.executeFetch = function executeFetch(fetchOptions) {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.updateQuery(); // Fetch\n\n    var promise = this.currentQuery.fetch(this.options, fetchOptions);\n\n    if (!(fetchOptions == null ? void 0 : fetchOptions.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  };\n\n  _proto.updateStaleTimeout = function updateStaleTimeout() {\n    var _this6 = this;\n\n    this.clearStaleTimeout();\n\n    if (isServer || this.currentResult.isStale || !isValidTimeout(this.options.staleTime)) {\n      return;\n    }\n\n    var time = timeUntilStale(this.currentResult.dataUpdatedAt, this.options.staleTime); // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n\n    var timeout = time + 1;\n    this.staleTimeoutId = setTimeout(function () {\n      if (!_this6.currentResult.isStale) {\n        _this6.updateResult();\n      }\n    }, timeout);\n  };\n\n  _proto.updateRefetchInterval = function updateRefetchInterval() {\n    var _this7 = this;\n\n    this.clearRefetchInterval();\n\n    if (isServer || this.options.enabled === false || !isValidTimeout(this.options.refetchInterval)) {\n      return;\n    }\n\n    this.refetchIntervalId = setInterval(function () {\n      if (_this7.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        _this7.executeFetch();\n      }\n    }, this.options.refetchInterval);\n  };\n\n  _proto.updateTimers = function updateTimers() {\n    this.updateStaleTimeout();\n    this.updateRefetchInterval();\n  };\n\n  _proto.clearTimers = function clearTimers() {\n    this.clearStaleTimeout();\n    this.clearRefetchInterval();\n  };\n\n  _proto.clearStaleTimeout = function clearStaleTimeout() {\n    clearTimeout(this.staleTimeoutId);\n    this.staleTimeoutId = undefined;\n  };\n\n  _proto.clearRefetchInterval = function clearRefetchInterval() {\n    clearInterval(this.refetchIntervalId);\n    this.refetchIntervalId = undefined;\n  };\n\n  _proto.createResult = function createResult(query, options) {\n    var prevQuery = this.currentQuery;\n    var prevOptions = this.options;\n    var prevResult = this.currentResult;\n    var prevResultState = this.currentResultState;\n    var prevResultOptions = this.currentResultOptions;\n    var queryChange = query !== prevQuery;\n    var queryInitialState = queryChange ? query.state : this.currentQueryInitialState;\n    var prevQueryResult = queryChange ? this.currentResult : this.previousQueryResult;\n    var state = query.state;\n    var dataUpdatedAt = state.dataUpdatedAt,\n        error = state.error,\n        errorUpdatedAt = state.errorUpdatedAt,\n        isFetching = state.isFetching,\n        status = state.status;\n    var isPreviousData = false;\n    var isPlaceholderData = false;\n    var data; // Optimistically set result in fetching state if needed\n\n    if (options.optimisticResults) {\n      var mounted = this.hasListeners();\n      var fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      var fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n\n      if (fetchOnMount || fetchOptionally) {\n        isFetching = true;\n\n        if (!dataUpdatedAt) {\n          status = 'loading';\n        }\n      }\n    } // Keep previous data if needed\n\n\n    if (options.keepPreviousData && !state.dataUpdateCount && (prevQueryResult == null ? void 0 : prevQueryResult.isSuccess) && status !== 'error') {\n      data = prevQueryResult.data;\n      dataUpdatedAt = prevQueryResult.dataUpdatedAt;\n      status = prevQueryResult.status;\n      isPreviousData = true;\n    } // Select data if needed\n    else if (options.select && typeof state.data !== 'undefined') {\n        // Memoize select result\n        if (prevResult && state.data === (prevResultState == null ? void 0 : prevResultState.data) && options.select === (prevResultOptions == null ? void 0 : prevResultOptions.select) && !this.previousSelectError) {\n          data = prevResult.data;\n        } else {\n          try {\n            data = options.select(state.data);\n\n            if (options.structuralSharing !== false) {\n              data = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, data);\n            }\n\n            this.previousSelectError = null;\n          } catch (selectError) {\n            getLogger().error(selectError);\n            error = selectError;\n            this.previousSelectError = selectError;\n            errorUpdatedAt = Date.now();\n            status = 'error';\n          }\n        }\n      } // Use query data\n      else {\n          data = state.data;\n        } // Show placeholder data if needed\n\n\n    if (typeof options.placeholderData !== 'undefined' && typeof data === 'undefined' && (status === 'loading' || status === 'idle')) {\n      var placeholderData; // Memoize placeholder data\n\n      if ((prevResult == null ? void 0 : prevResult.isPlaceholderData) && options.placeholderData === (prevResultOptions == null ? void 0 : prevResultOptions.placeholderData)) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === 'function' ? options.placeholderData() : options.placeholderData;\n\n        if (options.select && typeof placeholderData !== 'undefined') {\n          try {\n            placeholderData = options.select(placeholderData);\n\n            if (options.structuralSharing !== false) {\n              placeholderData = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, placeholderData);\n            }\n\n            this.previousSelectError = null;\n          } catch (selectError) {\n            getLogger().error(selectError);\n            error = selectError;\n            this.previousSelectError = selectError;\n            errorUpdatedAt = Date.now();\n            status = 'error';\n          }\n        }\n      }\n\n      if (typeof placeholderData !== 'undefined') {\n        status = 'success';\n        data = placeholderData;\n        isPlaceholderData = true;\n      }\n    }\n\n    var result = {\n      status: status,\n      isLoading: status === 'loading',\n      isSuccess: status === 'success',\n      isError: status === 'error',\n      isIdle: status === 'idle',\n      data: data,\n      dataUpdatedAt: dataUpdatedAt,\n      error: error,\n      errorUpdatedAt: errorUpdatedAt,\n      failureCount: state.fetchFailureCount,\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n      isFetchedAfterMount: state.dataUpdateCount > queryInitialState.dataUpdateCount || state.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching: isFetching,\n      isLoadingError: status === 'error' && state.dataUpdatedAt === 0,\n      isPlaceholderData: isPlaceholderData,\n      isPreviousData: isPreviousData,\n      isRefetchError: status === 'error' && state.dataUpdatedAt !== 0,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      remove: this.remove\n    };\n    return result;\n  };\n\n  _proto.shouldNotifyListeners = function shouldNotifyListeners(result, prevResult) {\n    if (!prevResult) {\n      return true;\n    }\n\n    if (result === prevResult) {\n      return false;\n    }\n\n    var _this$options = this.options,\n        notifyOnChangeProps = _this$options.notifyOnChangeProps,\n        notifyOnChangePropsExclusions = _this$options.notifyOnChangePropsExclusions;\n\n    if (!notifyOnChangeProps && !notifyOnChangePropsExclusions) {\n      return true;\n    }\n\n    if (notifyOnChangeProps === 'tracked' && !this.trackedProps.length) {\n      return true;\n    }\n\n    var includedProps = notifyOnChangeProps === 'tracked' ? this.trackedProps : notifyOnChangeProps;\n    return Object.keys(result).some(function (key) {\n      var typedKey = key;\n      var changed = result[typedKey] !== prevResult[typedKey];\n      var isIncluded = includedProps == null ? void 0 : includedProps.some(function (x) {\n        return x === key;\n      });\n      var isExcluded = notifyOnChangePropsExclusions == null ? void 0 : notifyOnChangePropsExclusions.some(function (x) {\n        return x === key;\n      });\n      return changed && !isExcluded && (!includedProps || isIncluded);\n    });\n  };\n\n  _proto.updateResult = function updateResult(notifyOptions) {\n    var prevResult = this.currentResult;\n    this.currentResult = this.createResult(this.currentQuery, this.options);\n    this.currentResultState = this.currentQuery.state;\n    this.currentResultOptions = this.options; // Only notify if something has changed\n\n    if (shallowEqualObjects(this.currentResult, prevResult)) {\n      return;\n    } // Determine which callbacks to trigger\n\n\n    var defaultNotifyOptions = {\n      cache: true\n    };\n\n    if ((notifyOptions == null ? void 0 : notifyOptions.listeners) !== false && this.shouldNotifyListeners(this.currentResult, prevResult)) {\n      defaultNotifyOptions.listeners = true;\n    }\n\n    this.notify(_extends({}, defaultNotifyOptions, notifyOptions));\n  };\n\n  _proto.updateQuery = function updateQuery() {\n    var query = this.client.getQueryCache().build(this.client, this.options);\n\n    if (query === this.currentQuery) {\n      return;\n    }\n\n    var prevQuery = this.currentQuery;\n    this.currentQuery = query;\n    this.currentQueryInitialState = query.state;\n    this.previousQueryResult = this.currentResult;\n\n    if (this.hasListeners()) {\n      prevQuery == null ? void 0 : prevQuery.removeObserver(this);\n      query.addObserver(this);\n    }\n  };\n\n  _proto.onQueryUpdate = function onQueryUpdate(action) {\n    var notifyOptions = {};\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error' && !isCancelledError(action.error)) {\n      notifyOptions.onError = true;\n    }\n\n    this.updateResult(notifyOptions);\n\n    if (this.hasListeners()) {\n      this.updateTimers();\n    }\n  };\n\n  _proto.notify = function notify(notifyOptions) {\n    var _this8 = this;\n\n    notifyManager.batch(function () {\n      // First trigger the configuration callbacks\n      if (notifyOptions.onSuccess) {\n        _this8.options.onSuccess == null ? void 0 : _this8.options.onSuccess(_this8.currentResult.data);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(_this8.currentResult.data, null);\n      } else if (notifyOptions.onError) {\n        _this8.options.onError == null ? void 0 : _this8.options.onError(_this8.currentResult.error);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(undefined, _this8.currentResult.error);\n      } // Then trigger the listeners\n\n\n      if (notifyOptions.listeners) {\n        _this8.listeners.forEach(function (listener) {\n          listener(_this8.currentResult);\n        });\n      } // Then the cache listeners\n\n\n      if (notifyOptions.cache) {\n        _this8.client.getQueryCache().notify({\n          query: _this8.currentQuery,\n          type: 'observerResultsUpdated'\n        });\n      }\n    });\n  };\n\n  return QueryObserver;\n}(Subscribable);\n\nfunction shouldLoadOnMount(query, options) {\n  return options.enabled !== false && !query.state.dataUpdatedAt && !(query.state.status === 'error' && options.retryOnMount === false);\n}\n\nfunction shouldRefetchOnMount(query, options) {\n  return options.enabled !== false && query.state.dataUpdatedAt > 0 && (options.refetchOnMount === 'always' || options.refetchOnMount !== false && isStale(query, options));\n}\n\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || shouldRefetchOnMount(query, options);\n}\n\nfunction _shouldFetchOnReconnect(query, options) {\n  return options.enabled !== false && (options.refetchOnReconnect === 'always' || options.refetchOnReconnect !== false && isStale(query, options));\n}\n\nfunction _shouldFetchOnWindowFocus(query, options) {\n  return options.enabled !== false && (options.refetchOnWindowFocus === 'always' || options.refetchOnWindowFocus !== false && isStale(query, options));\n}\n\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return options.enabled !== false && (query !== prevQuery || prevOptions.enabled === false) && (query.state.status !== 'error' || prevOptions.enabled === false) && isStale(query, options);\n}\n\nfunction isStale(query, options) {\n  return query.isStaleByTime(options.staleTime);\n}","import { QueryObserver } from '../core';\nimport { parseQueryArgs } from '../core/utils';\nimport { useBaseQuery } from './useBaseQuery'; // HOOK\n\nexport function useQuery(arg1, arg2, arg3) {\n  var parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(parsedOptions, QueryObserver);\n}","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;\n","var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n"],"sourceRoot":""}