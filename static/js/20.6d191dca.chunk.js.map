{"version":3,"sources":["views/channel/channel.tsx","components/seo/seo.tsx","hooks/useInViewport.ts","hooks/useUniqueId.ts","components/scrollable/scrollable.tsx","components/button/button.tsx","hooks/useChangebleState.ts","components/checkbox/checkbox.tsx","components/accordion/accordion.tsx","utils/date.ts","utils/video.ts","components/spotlightContainer/spotlightContainer.tsx","hooks/useHashTrigger.ts","components/popup/popup.tsx","components/radio/radio.tsx","components/select/select.tsx","utils/subtitles.ts","components/media/media.new.tsx","components/player/settings.tsx","components/player/startFrom.tsx","components/player/player.tsx"],"names":["ChannelView","history","useHistory","channel","useLocation","state","playerProps","useMemo","title","poster","logos","m","sources","mapSources","url","stream","handleOnEnded","useCallback","goBack","onEnded","Seo","props","Helmet","defaultTitle","titleTemplate","useInViewport","target","options","config","disconnectOnLeave","onEnterViewport","onLeaveViewport","useState","forceUpdate","observer","useRef","inViewportRef","intersected","enterCountRef","leaveCountRef","startObserver","current","node","findDOMNode","observe","stopObserver","unobserve","disconnect","handleIntersection","entries","entry","isIntersecting","intersectionRatio","isInViewport","initIntersectionObserver","IntersectionObserver","useEffect","inViewport","enterCount","leaveCount","useUniqueId","prefix","uid","useUID","ScrollableContext","createContext","Scrollable","children","className","onScrollToEnd","footerRef","id","value","cx","Provider","ref","Button","icon","iconOnly","autoFocus","wrapperRef","frameId","requestAnimationFrame","focus","cancelAnimationFrame","role","name","useChangebleState","initialState","setState","Checkbox","defaultChecked","checked","onChange","inputRef","handleChange","e","handleKeyPress","isKey","click","component","onKeyPress","type","Accordion","open","onToggle","subtitle","visible","setVisible","handleClick","newVisible","onClick","secondsToDuration","seconds","formatDuration","leading","formatIdx","idx","mapAudios","audios","ac3ByDefault","map","audio","lang","filter","author","toUpper","codec","join","default","files","streamingType","orderBy","file","src","http","quality","includes","parseInt","mapSubtitles","subtitles","SpotlightContainer","SpotlightContainerDecorator","enterTo","defaultElement","selector","overflow","preserveId","useHashTrigger","hash","onClose","onOpen","hasHash","location","push","search","pathname","close","timeoutId","setTimeout","clearTimeout","Popup","closeButton","containerId","Spotlight","add","handleClose","handleCloseIfVisible","spotPopupContent","getCurrent","blur","setActiveContainer","setPointerMode","useButtonEffect","hashTrigger","hidden","spotlightId","spotlightRestrict","spotlightDisabled","Radio","Select","label","defaultValue","closeOnChange","splitIn","setOpen","val","setVal","opts","Array","isArray","option","selectedOption","find","o","handleChanged","handleChecked","opt","WebVTTConverter","resource","objectURL","this","Promise","resolve","reject","reader","FileReader","addEventListener","event","buf","result","Uint8Array","readAsArrayBuffer","Blob","TextDecoder","blobToString","decoded","text","concat","toVTT","blob","URL","createObjectURL","blobToBuffer","then","buffer","utf8str","decode","success","fail","readAsText","replace","str","split","forEach","each","charCodeAt","from","a","fetch","converter","getURL","useVideoPlayer","autoPlay","audioTracks","sourceTracks","subtitleTracks","isSettingsOpen","videoRef","hlsRef","startTimeRef","isSettingsOpenRef","isLoaded","setIsLoaded","useStorageState","isHLSJSActive","audioTrack","currentAudioTrack","setCurrentAudioTrack","currentSourceTrack","setCurrentSourceTrack","currentSubtitleTrack","setCurrentSubtitleTrack","getAudioTracks","getAudioTrack","setAudioTrack","audioTrackName","getSourceTracks","uniqBy","getSourceTrack","setSourceTrack","sourceTrackName","sourceTrack","getSubtitleTracks","getSubtitleTrack","setSubtitleTrack","subtitleTrackName","subtitleTrack","currentAudioTrackIndex","findIndex","currentSrc","handleMediaLoaded","removeEventListener","currentTime","pause","play","HLS","isSupported","hls","enableWebVTT","enableCEA708Captions","attachMedia","on","Events","MEDIA_ATTACHED","loadSource","destroy","hlsAudioTrack","enabled","firstChild","lastChild","track","mode","removeChild","addSubtitleTrack","document","createElement","appendChild","kind","srclang","endsWith","convertToVTT","Boolean","MEDIA_EVENTS","Media","React","forwardRef","onUpdate","mediaComponent","handleUpdate","eventProps","reduce","args","player","getCurrentTime","setCurrentTime","getPlaybackRate","playbackRate","setPlaybackRate","getPaused","paused","getDuration","duration","getError","networkState","NETWORK_NO_SOURCE","getLoading","readyState","HAVE_ENOUGH_DATA","getProportionLoaded","buffered","length","end","getProportionPlayed","playPause","load","api","useImperativeHandle","useVideoPlayerApi","NONE","Settings","isOpen","setIsOpen","setAudios","currentAudio","setCurrentAudio","setSources","currentSource","setCurrentSource","setSubtitles","currentSubtitle","setCurrentSubtitle","audioOptions","sourceOptions","source","subtitleOptions","handleVideoUpdate","getVideoNode","handleAudioChange","handleSourceChange","handleSubtitleChange","video","StartFrom","startTime","startInDelay","startIn","setStartIn","startFrom","handleStartFromClick","handleStartFromBeginingClick","intervalId","setInterval","prevStartIn","newStartIn","clearInterval","Player","description","timeSyncInterval","onPlay","onPause","onTimeSync","playerRef","isPaused","setIsPaused","setIsSettingsOpen","handlePlay","handlePause","handleEnded","handleTimeSync","handleLoadedMetadata","handleSettingsOpen","handleSettingsClose","handlePauseButton","locale","jumpBy","onLoadedMetadata","videoComponent"],"mappings":"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","file":"static/js/20.6d191dca.chunk.js","sourcesContent":["import { useCallback, useMemo } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport { Channel } from 'api';\nimport Player, { PlayerProps } from 'components/player';\nimport Seo from 'components/seo';\n\nimport { mapSources } from 'utils/video';\n\nconst ChannelView: React.FC = () => {\n  const history = useHistory();\n  const location = useLocation<{ channel: Channel }>();\n  const { channel } = location.state || {};\n\n  const playerProps = useMemo<PlayerProps>(() => {\n    return {\n      title: channel.title,\n      poster: channel.logos.m,\n      sources: mapSources([\n        {\n          url: channel.stream,\n        },\n      ]),\n    };\n  }, [channel]);\n\n  const handleOnEnded = useCallback(() => {\n    history.goBack();\n  }, [history]);\n\n  return (\n    <>\n      <Seo title={`Канал: ${channel.title}`} />\n      <Player {...playerProps} onEnded={handleOnEnded} />\n    </>\n  );\n};\n\nexport default ChannelView;\n","import { Helmet, HelmetProps } from 'react-helmet';\n\ntype Props = {} & HelmetProps;\n\nconst Seo: React.FC<Props> = (props) => {\n  return <Helmet defaultTitle=\"Unknown\" titleTemplate=\"%s | Kinopub WebOS\" {...props} />;\n};\n\nexport default Seo;\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { findDOMNode } from 'react-dom';\n\ntype Props = {\n  onEnterViewport?: () => void;\n  onLeaveViewport?: () => void;\n};\n\nconst useInViewport = (\n  target: React.MutableRefObject<React.ReactInstance | null | undefined>,\n  props: Props,\n  options?: IntersectionObserverInit,\n  config = { disconnectOnLeave: false },\n) => {\n  const { onEnterViewport, onLeaveViewport } = props;\n  const [, forceUpdate] = useState();\n\n  const observer = useRef<IntersectionObserver | null>(null);\n\n  const inViewportRef = useRef(false);\n  const intersected = useRef(false);\n\n  const enterCountRef = useRef(0);\n  const leaveCountRef = useRef(0);\n\n  const startObserver = useCallback(() => {\n    if (target.current && observer.current) {\n      const node = findDOMNode(target.current) as Element;\n      if (node) {\n        observer.current.observe(node);\n      }\n    }\n  }, [target, observer]);\n\n  const stopObserver = useCallback(() => {\n    if (target.current && observer.current) {\n      const node = findDOMNode(target.current) as Element;\n      if (node) {\n        observer.current.unobserve(node);\n        observer.current.disconnect();\n        observer.current = null;\n      }\n    }\n  }, [target, observer]);\n\n  const handleIntersection = useCallback(\n    (entries) => {\n      const entry = entries[0] || {};\n      const { isIntersecting, intersectionRatio } = entry;\n      const isInViewport = typeof isIntersecting !== 'undefined' ? isIntersecting : intersectionRatio > 0;\n\n      // enter\n      if (!intersected.current && isInViewport) {\n        intersected.current = true;\n\n        onEnterViewport?.();\n\n        enterCountRef.current += 1;\n        inViewportRef.current = isInViewport;\n\n        forceUpdate(isInViewport);\n\n        return;\n      }\n\n      // leave\n      if (intersected.current && !isInViewport) {\n        intersected.current = false;\n\n        onLeaveViewport?.();\n\n        if (config.disconnectOnLeave && observer.current) {\n          // disconnect obsever on leave\n          observer.current.disconnect();\n        }\n\n        leaveCountRef.current += 1;\n        inViewportRef.current = isInViewport;\n\n        forceUpdate(isInViewport);\n      }\n    },\n    [observer, config.disconnectOnLeave, onEnterViewport, onLeaveViewport],\n  );\n\n  const initIntersectionObserver = useCallback(() => {\n    if (!observer.current) {\n      observer.current = new IntersectionObserver(handleIntersection, options);\n    }\n  }, [observer, options, handleIntersection]);\n\n  useEffect(() => {\n    initIntersectionObserver();\n    startObserver();\n\n    return () => {\n      stopObserver();\n    };\n  }, [initIntersectionObserver, startObserver, stopObserver]);\n\n  return {\n    inViewport: inViewportRef.current,\n    enterCount: enterCountRef.current,\n    leaveCount: leaveCountRef.current,\n  };\n};\n\nexport default useInViewport;\n","import { useMemo } from 'react';\nimport { useUID } from 'react-uid';\n\nfunction useUniqueId(prefix: string) {\n  const uid = useUID();\n  const id = useMemo(() => `${prefix}-${uid}`, [prefix, uid]);\n\n  return id;\n}\n\nexport default useUniqueId;\n","import { createContext, useMemo, useRef } from 'react';\nimport cx from 'classnames';\n\nimport useInViewport from 'hooks/useInViewport';\nimport useUniqueId from 'hooks/useUniqueId';\n\nexport const ScrollableContext = createContext<{ id?: string }>({});\n\ntype Props = {\n  onScrollToEnd?: () => void;\n  className?: string;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nconst Scrollable: React.FC<Props> = ({ children, className, onScrollToEnd, ...props }) => {\n  const footerRef = useRef<HTMLDivElement>(null);\n  const id = useUniqueId('scrollable');\n  const value = useMemo(\n    () => ({\n      id,\n    }),\n    [id],\n  );\n\n  useInViewport(footerRef, { onEnterViewport: onScrollToEnd });\n\n  return (\n    <div className={cx('overflow-y-auto h-full', className)} {...props} id={id}>\n      <ScrollableContext.Provider value={value}>{children}</ScrollableContext.Provider>\n      {onScrollToEnd && <div className=\"h-40\" ref={footerRef} />}\n    </div>\n  );\n};\n\nexport default Scrollable;\n","import { useEffect, useRef } from 'react';\nimport cx from 'classnames';\n\nimport Icon from 'components/icon';\nimport Spottable from 'components/spottable';\n\ntype Props = {\n  icon?: string;\n  iconOnly?: boolean;\n  autoFocus?: boolean;\n  className?: string;\n} & React.ComponentProps<typeof Spottable>;\n\nconst Button: React.FC<Props> = ({ icon, iconOnly, children, autoFocus, className, ...props }) => {\n  const wrapperRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    let frameId: number;\n\n    if (autoFocus) {\n      frameId = requestAnimationFrame(() => {\n        // @ts-expect-error\n        wrapperRef.current?.node?.focus();\n      });\n    }\n\n    return () => {\n      if (frameId) {\n        cancelAnimationFrame(frameId);\n      }\n    };\n  }, [wrapperRef, autoFocus]);\n\n  return (\n    <Spottable\n      {...props}\n      ref={wrapperRef}\n      className={cx('text-gray-200 whitespace-nowrap cursor-pointer rounded px-2 py-1', className)}\n      role=\"button\"\n    >\n      <div className=\"flex items-center\">\n        {icon && <Icon className={cx({ 'mr-2': !iconOnly })} name={icon} />}\n        {!iconOnly && children}\n      </div>\n    </Spottable>\n  );\n};\n\nexport default Button;\n","import { useEffect, useState } from 'react';\n\nfunction useChangebleState<T>(initialState?: T) {\n  const [state, setState] = useState(initialState);\n\n  useEffect(() => {\n    setState(initialState);\n  }, [initialState]);\n\n  return [state, setState] as const;\n}\n\nexport default useChangebleState;\n","import { useCallback, useRef } from 'react';\nimport React from 'react';\nimport cx from 'classnames';\n\nimport Spottable from 'components/spottable';\n\nimport { isKey } from 'utils/keyboard';\n\nexport type CheckboxProps = {\n  defaultChecked?: boolean;\n  checked?: boolean;\n  onChange?: (checked: boolean, e: React.ChangeEvent<HTMLInputElement>) => void;\n  className?: string;\n  type?: string;\n} & Omit<React.HTMLAttributes<HTMLInputElement>, 'onChange'>;\n\nconst Checkbox: React.FC<CheckboxProps> = ({ defaultChecked, checked, onChange, className, children, ...props }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const handleChange = useCallback<React.ChangeEventHandler<HTMLInputElement>>(\n    (e) => {\n      onChange?.(e.target.checked, e);\n    },\n    [onChange],\n  );\n  const handleKeyPress = useCallback((e: KeyboardEvent) => {\n    if (isKey(e, 'Enter')) {\n      inputRef.current?.click();\n    }\n  }, []);\n\n  return (\n    <Spottable\n      component=\"label\"\n      className={cx('text-gray-200 p-2', className)}\n      // @ts-expect-error\n      onKeyPress={handleKeyPress}\n      role=\"button\"\n    >\n      <div className=\"inline-flex items-center cursor-pointer\">\n        <input\n          type=\"checkbox\"\n          {...props}\n          ref={inputRef}\n          className=\"inline-block w-4 h-4\"\n          defaultChecked={defaultChecked}\n          checked={checked}\n          onChange={handleChange}\n        />\n        <span className=\"inline-block ml-2 whitespace-nowrap\">{children}</span>\n      </div>\n    </Spottable>\n  );\n};\n\nexport default Checkbox;\n","import { useCallback } from 'react';\nimport cx from 'classnames';\n\nimport Icon from 'components/icon';\nimport Spottable from 'components/spottable';\nimport Text from 'components/text';\nimport useChangebleState from 'hooks/useChangebleState';\n\ntype Props = {\n  title: string;\n  subtitle?: string;\n  className?: string;\n  open?: boolean;\n  onToggle?: (open: boolean) => void;\n};\n\nconst Accordion: React.FC<Props> = ({ open, onToggle, title, subtitle, className, children }) => {\n  const [visible, setVisible] = useChangebleState(open);\n\n  const handleClick = useCallback(() => {\n    const newVisible = !visible;\n    onToggle?.(newVisible);\n    setVisible(newVisible);\n  }, [visible, setVisible, onToggle]);\n\n  return (\n    <div className=\"flex flex-col w-full\">\n      <Spottable onClick={handleClick} className={cx('p-1 cursor-pointer', className)}>\n        <div className=\"flex flex-col\">\n          <div className=\"flex items-center\">\n            <Text>{title}</Text>\n\n            <Icon name={visible ? 'expand_less' : 'expand_more'} />\n          </div>\n          {!visible && subtitle && <Text className=\"mt-2\">{subtitle}</Text>}\n        </div>\n      </Spottable>\n      {visible && children}\n    </div>\n  );\n};\n\nexport default Accordion;\n","import formatDuration from 'format-duration';\n\nexport function secondsToDuration(seconds?: number) {\n  return formatDuration((seconds || 0) * 1000, { leading: true });\n}\n","import filter from 'lodash/filter';\nimport map from 'lodash/map';\nimport orderBy from 'lodash/orderBy';\nimport toUpper from 'lodash/toUpper';\n\nimport { Audio, Streaming, Subtitle } from 'api';\nimport { AudioTrack, SourceTrack, SubtitleTrack } from 'components/media';\n\nconst formatIdx = (idx: number) => (idx < 10 ? `0${idx}` : idx);\n\nexport function mapAudios(audios: Audio[], ac3ByDefault?: boolean): AudioTrack[] {\n  return map(audios, (audio, idx) => ({\n    lang: audio.lang,\n    name: filter([\n      `${formatIdx(idx + 1)}.`,\n      audio.type?.title && audio.author?.title ? `${audio.type?.title}.` : audio.type?.title,\n      audio.author?.title,\n      audio.type?.title || audio.author?.title ? `(${toUpper(audio.lang)})` : toUpper(audio.lang),\n      audio.codec === 'ac3' && toUpper(audio.codec),\n    ]).join(' '),\n    default: ac3ByDefault && audio.codec === 'ac3',\n  }));\n}\n\nexport function mapSources(\n  files: { url: string | { [key in Streaming]?: string }; quality?: string }[],\n  streamingType?: Streaming,\n): SourceTrack[] {\n  return orderBy(\n    map(files, (file) => {\n      const src = (typeof file.url === 'string' ? file.url : file.url[streamingType!] || file.url.http!) as string;\n\n      return {\n        src,\n        name: file.quality!,\n        type: src.includes('.m3u8') ? 'application/x-mpegURL' : 'video/mp4',\n      };\n    }),\n    ({ name }) => parseInt(name),\n    'desc',\n  );\n}\n\nexport function mapSubtitles(subtitles: Subtitle[]): SubtitleTrack[] {\n  return map(subtitles, (subtitle, idx) => ({\n    src: subtitle.url,\n    lang: subtitle.lang,\n    name: `${toUpper(subtitle.lang)} #${formatIdx(idx + 1)}`,\n  }));\n}\n","import SpotlightContainerDecorator from '@enact/spotlight/SpotlightContainerDecorator';\n\nexport const CONFIG = {\n  enterTo: 'default-element',\n  defaultElement: '.spottable',\n  selector: '.spottable',\n  overflow: true,\n  preserveId: true,\n};\n\nconst SpotlightContainer = SpotlightContainerDecorator(CONFIG, (props: React.HTMLAttributes<HTMLDivElement>) => <div {...props} />);\n\nexport default SpotlightContainer;\n","import { useCallback, useEffect, useMemo } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nfunction useHashTrigger(hash: string, onClose?: Function, onOpen?: Function) {\n  const history = useHistory();\n  const hasHash = useCallback(() => history.location.hash.includes(hash), [hash, history]);\n\n  const open = useCallback(() => {\n    if (!hasHash()) {\n      history.push({\n        hash,\n        state: history.location.state,\n        search: history.location.search,\n        pathname: history.location.pathname,\n      });\n    }\n    onOpen?.();\n  }, [hash, hasHash, history, onOpen]);\n\n  const close = useCallback(() => {\n    if (hasHash()) {\n      history.goBack();\n    }\n    onClose?.();\n  }, [hasHash, history, onClose]);\n\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      if (hasHash()) {\n        open();\n      } else {\n        close();\n      }\n    }, 100);\n\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  }, [hasHash, open, close, history.location.hash]);\n\n  return useMemo(\n    () => ({\n      open,\n      close,\n    }),\n    [open, close],\n  );\n}\n\nexport default useHashTrigger;\n","import { useCallback, useEffect, useMemo } from 'react';\nimport Spotlight from '@enact/spotlight';\nimport cx from 'classnames';\n\nimport Scrollable from 'components/scrollable';\nimport SpotlightContainer from 'components/spotlightContainer';\nimport useButtonEffect, { KeyboardCodesKeys } from 'hooks/useButtonEffect';\nimport useHashTrigger from 'hooks/useHashTrigger';\n\ntype Props = {\n  visible: boolean;\n  onClose: () => void;\n  closeButton?: KeyboardCodesKeys;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nconst Popup: React.FC<Props> = ({ visible, onClose, children, className, closeButton = 'Blue', ...props }) => {\n  const containerId = useMemo(() => Spotlight.add({}), []);\n  const handleClose = useCallback(() => {\n    onClose();\n  }, [onClose]);\n\n  const handleCloseIfVisible = useCallback(() => {\n    if (visible) {\n      handleClose();\n\n      return false;\n    }\n  }, [visible, handleClose]);\n\n  const spotPopupContent = useCallback(() => {\n    if (!Spotlight.focus(containerId)) {\n      const current = Spotlight.getCurrent();\n\n      // In cases where the container contains no spottable controls or we're in pointer-mode, focus\n      // cannot inherently set the active container or blur the active control, so we must do that\n      // here.\n      if (current) {\n        // @ts-expect-error\n        current.blur();\n      }\n\n      Spotlight.setActiveContainer(containerId);\n      setTimeout(() => {\n        Spotlight.setPointerMode(false);\n        Spotlight.focus(containerId);\n      }, 500);\n    }\n  }, [containerId]);\n\n  useButtonEffect('Back', handleCloseIfVisible);\n  useButtonEffect(closeButton, handleCloseIfVisible);\n  const hashTrigger = useHashTrigger('popup', handleCloseIfVisible);\n\n  useEffect(() => {\n    if (visible) {\n      spotPopupContent();\n      hashTrigger.open();\n    } else {\n      hashTrigger.close();\n    }\n  }, [visible, spotPopupContent, hashTrigger]);\n\n  return (\n    <>\n      <div\n        className={cx('fixed z-999 top-0 left-0 right-0 bottom-0 bg-black bg-opacity-50', {\n          hidden: !visible,\n        })}\n        onClick={handleClose}\n      />\n      <SpotlightContainer\n        {...props}\n        spotlightId={containerId}\n        spotlightRestrict=\"self-only\"\n        spotlightDisabled={!visible}\n        className={cx(\n          'fixed z-999 bottom-0 left-0 right-0 p-4 bg-black ring',\n          {\n            hidden: !visible,\n          },\n          className,\n        )}\n      >\n        <Scrollable className=\"max-h-screen\">{children}</Scrollable>\n      </SpotlightContainer>\n    </>\n  );\n};\n\nexport default Popup;\n","import React from 'react';\n\nimport Checkbox, { CheckboxProps } from 'components/checkbox';\n\ntype Props = {} & CheckboxProps;\n\nconst Radio: React.FC<Props> = (props) => {\n  return <Checkbox {...props} type=\"radio\" />;\n};\n\nexport default Radio;\n","import { useCallback, useMemo, useState } from 'react';\nimport map from 'lodash/map';\n\nimport Accordion from 'components/accordion';\nimport Radio from 'components/radio';\nimport useChangebleState from 'hooks/useChangebleState';\n\ntype Option<T = any> = {\n  title: string;\n  value: T;\n};\n\ntype Props<T = any> = {\n  label: string;\n  options: Option<T>[] | string[];\n  value?: T;\n  defaultValue?: T;\n  onChange?: (value: T) => void;\n  closeOnChange?: boolean;\n  className?: string;\n  splitIn?: number;\n};\n\nconst Select: React.FC<Props> = ({ label, options, defaultValue, value, onChange, closeOnChange, className, splitIn }) => {\n  const [open, setOpen] = useState(false);\n  const [val, setVal] = useChangebleState(value || defaultValue);\n  const opts = useMemo(\n    () =>\n      Array.isArray(options) ? options.map((option, idx) => (typeof option === 'string' ? { title: option, value: idx } : option)) : [],\n    [options],\n  );\n  const selectedOption = useMemo(() => opts.find((o) => o.value === val), [opts, val]);\n\n  const handleChanged = useCallback(\n    (value) => {\n      setVal(value);\n      onChange?.(value);\n\n      if (closeOnChange) {\n        setOpen(false);\n      }\n    },\n    [setVal, onChange, closeOnChange],\n  );\n  const handleChecked = useCallback(\n    (option: Option) => (checked: boolean) => {\n      if (checked) {\n        handleChanged(option.value);\n      }\n    },\n    [handleChanged],\n  );\n\n  return (\n    <Accordion open={open} onToggle={setOpen} title={label} subtitle={selectedOption?.title} className={className}>\n      <div className=\"flex flex-wrap\">\n        {map(opts, (opt) => (\n          <Radio\n            key={opt.value}\n            className={splitIn ? `w-1/${splitIn}` : 'w-full'}\n            checked={opt.value === val}\n            onChange={handleChecked(opt)}\n          >\n            {opt.title}\n          </Radio>\n        ))}\n      </div>\n    </Accordion>\n  );\n};\n\nexport default Select;\n","class WebVTTConverter {\n  resource: Blob;\n\n  private objectURL?: string;\n\n  constructor(resource: Blob) {\n    this.resource = resource;\n  }\n\n  blobToBuffer() {\n    return new Promise<ArrayBuffer>((resolve, reject) => {\n      const reader = new FileReader();\n      reader.addEventListener('loadend', (event) => {\n        const buf = event.target?.result;\n        resolve(new Uint8Array(buf as ArrayBuffer));\n      });\n      reader.addEventListener('error', () => reject('Error while reading the Blob object'));\n      reader.readAsArrayBuffer(this.resource);\n    });\n  }\n\n  static blobToString(blob: Blob, success: (text: string) => void, fail: () => void) {\n    const reader = new FileReader();\n    reader.addEventListener('loadend', (event) => {\n      const text = event.target?.result;\n      success(text as string);\n    });\n    reader.addEventListener('error', () => fail());\n    reader.readAsText(blob);\n  }\n\n  /**\n   * @param {*} utf8str\n   */\n  static toVTT(utf8str: string) {\n    return utf8str\n      .replace(/\\{\\\\([ibu])\\}/g, '</$1>')\n      .replace(/\\{\\\\([ibu])1\\}/g, '<$1>')\n      .replace(/\\{([ibu])\\}/g, '<$1>')\n      .replace(/\\{\\/([ibu])\\}/g, '</$1>')\n      .replace(/(\\d\\d:\\d\\d:\\d\\d),(\\d\\d\\d)/g, '$1.$2')\n      .concat('\\r\\n\\r\\n');\n  }\n\n  static toTypedArray(str: string) {\n    const result: number[] = [];\n    str.split('').forEach((each) => {\n      result.push(parseInt(`${each.charCodeAt(0)}`, 16));\n    });\n    return Uint8Array.from(result);\n  }\n\n  getURL() {\n    return new Promise<string>((resolve, reject) => {\n      if (!(this.resource instanceof Blob)) return reject('Expecting resource to be a Blob but something else found.');\n      if (!FileReader) return reject('No FileReader constructor found');\n      if (!TextDecoder) return reject('No TextDecoder constructor found');\n      return WebVTTConverter.blobToString(\n        this.resource,\n        (decoded) => {\n          const vttString = 'WEBVTT FILE\\r\\n\\r\\n';\n          const text = vttString.concat(WebVTTConverter.toVTT(decoded));\n          const blob = new Blob([text], { type: 'text/vtt' });\n          this.objectURL = URL.createObjectURL(blob);\n\n          return resolve(this.objectURL);\n        },\n        () => {\n          this.blobToBuffer().then((buffer) => {\n            const utf8str = new TextDecoder('utf-8').decode(buffer);\n            const vttString = 'WEBVTT FILE\\r\\n\\r\\n';\n            const text = vttString.concat(WebVTTConverter.toVTT(utf8str));\n            const blob = new Blob([text], { type: 'text/vtt' });\n            this.objectURL = URL.createObjectURL(blob);\n\n            return resolve(this.objectURL);\n          });\n        },\n      );\n    });\n  }\n\n  release() {\n    URL.createObjectURL(this.objectURL);\n  }\n}\n\nexport async function convertToVTT(src: string) {\n  const file = await (await fetch(src)).blob();\n  const converter = new WebVTTConverter(file);\n\n  return converter.getURL();\n}\n","import React, { useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport cx from 'classnames';\nimport HLS from 'hls.js';\nimport forEach from 'lodash/forEach';\nimport uniqBy from 'lodash/uniqBy';\n\nimport useStorageState from 'hooks/useStorageState';\n\nimport { convertToVTT } from 'utils/subtitles';\n\nexport type AudioTrack = {\n  name: string;\n  lang: string;\n  default?: boolean;\n};\n\nexport type SourceTrack = {\n  src: string;\n  type: string;\n  name: string;\n};\n\nexport type SubtitleTrack = {\n  src: string;\n  name: string;\n  lang: string;\n};\n\nexport type StreamingType = 'http' | 'hls' | 'hls2' | 'hls4';\n\ntype OwnProps = {\n  autoPlay?: boolean;\n  audioTracks?: AudioTrack[];\n  sourceTracks?: SourceTrack[];\n  subtitleTracks?: SubtitleTrack[];\n  streamingType?: StreamingType;\n  isSettingsOpen?: boolean;\n  onUpdate?: () => void;\n  mediaComponent?: string;\n};\n\nexport type MediaRef = {\n  play: () => Promise<void>;\n  pause: () => void;\n  playPause: () => Promise<void>;\n  load: () => void;\n  currentTime: number;\n  playbackRate: number;\n  audioTracks?: AudioTrack[];\n  audioTrack?: string;\n  sourceTracks?: SourceTrack[];\n  sourceTrack?: string;\n  subtitleTracks?: SubtitleTrack[];\n  subtitleTrack?: string;\n  readonly duration: number;\n  readonly error: boolean;\n  readonly loading: boolean;\n  readonly paused: boolean;\n  readonly proportionLoaded: number;\n  readonly proportionPlayed: number;\n};\n\nfunction useVideoPlayer({ autoPlay, audioTracks, sourceTracks, subtitleTracks, streamingType, isSettingsOpen }: OwnProps) {\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const hlsRef = useRef<HLS | null>(null);\n  const startTimeRef = useRef(0);\n  const isSettingsOpenRef = useRef(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isHLSJSActive] = useStorageState<boolean>('is_hls.js_active');\n  const [currentAudioTrack, setCurrentAudioTrack] = useState<AudioTrack>(\n    () => (audioTracks?.find((audioTrack) => audioTrack.default) || audioTracks?.[0])!,\n  );\n  const [currentSourceTrack, setCurrentSourceTrack] = useState<SourceTrack>(sourceTracks?.[0]!);\n  const [currentSubtitleTrack, setCurrentSubtitleTrack] = useState<SubtitleTrack | null>(null);\n\n  const getAudioTracks = useCallback(() => (streamingType === 'hls2' ? [] : audioTracks), [audioTracks, streamingType]);\n  const getAudioTrack = useCallback(() => currentAudioTrack?.name, [currentAudioTrack]);\n  const setAudioTrack = useCallback(\n    (audioTrackName: string) => {\n      const audioTrack = audioTracks?.find((audioTrack) => audioTrack.name === audioTrackName);\n      if (audioTrack) {\n        setCurrentAudioTrack(audioTrack);\n      }\n    },\n    [audioTracks],\n  );\n  const getSourceTracks = useCallback(() => uniqBy(sourceTracks, 'src'), [sourceTracks]);\n  const getSourceTrack = useCallback(() => currentSourceTrack?.name, [currentSourceTrack]);\n  const setSourceTrack = useCallback(\n    (sourceTrackName: string) => {\n      const sourceTrack = sourceTracks?.find((sourceTrack) => sourceTrack.name === sourceTrackName);\n      if (sourceTrack) {\n        setCurrentSourceTrack(sourceTrack);\n      }\n    },\n    [sourceTracks],\n  );\n  const getSubtitleTracks = useCallback(() => subtitleTracks, [subtitleTracks]);\n  const getSubtitleTrack = useCallback(() => currentSubtitleTrack?.name, [currentSubtitleTrack]);\n  const setSubtitleTrack = useCallback(\n    (subtitleTrackName?: string) => {\n      const subtitleTrack = subtitleTracks?.find((subtitleTrack) => subtitleTrack.name === subtitleTrackName);\n      setCurrentSubtitleTrack(subtitleTrack || null);\n    },\n    [subtitleTracks],\n  );\n\n  const currentAudioTrackIndex = useMemo(\n    () => audioTracks?.findIndex((audioTrack) => audioTrack.name === currentAudioTrack.name) ?? 0,\n    [audioTracks, currentAudioTrack],\n  );\n  const currentSrc = useMemo(\n    () =>\n      streamingType === 'hls'\n        ? currentSourceTrack?.src.replace(/master-v1a\\d/, `master-v1a${currentAudioTrackIndex + 1}`)\n        : currentSourceTrack?.src,\n    [streamingType, currentAudioTrackIndex, currentSourceTrack?.src],\n  );\n\n  const handleMediaLoaded = useCallback(() => {\n    if (videoRef.current) {\n      setIsLoaded(true);\n      videoRef.current.removeEventListener('canplay', handleMediaLoaded);\n\n      if (startTimeRef.current > 0) {\n        videoRef.current.currentTime = startTimeRef.current;\n\n        if (isSettingsOpenRef.current) {\n          videoRef.current.pause();\n        } else {\n          videoRef.current.play();\n        }\n      } else if (autoPlay) {\n        videoRef.current.play();\n      }\n    }\n  }, [autoPlay]);\n\n  useEffect(() => {\n    if (videoRef.current && currentSrc) {\n      if (isHLSJSActive !== false && currentSrc.includes('.m3u8') && HLS.isSupported()) {\n        const hls = (hlsRef.current = new HLS({\n          enableWebVTT: false,\n          enableCEA708Captions: false,\n        }));\n        hls.attachMedia(videoRef.current);\n        hls.on(HLS.Events.MEDIA_ATTACHED, () => {\n          hls.loadSource(currentSrc);\n        });\n      } else {\n        videoRef.current.src = currentSrc;\n      }\n\n      setIsLoaded(false);\n      videoRef.current.addEventListener('canplay', handleMediaLoaded);\n    }\n\n    return () => {\n      if (videoRef.current) {\n        if (videoRef.current.currentTime > 0) {\n          // eslint-disable-next-line\n          startTimeRef.current = videoRef.current.currentTime;\n        }\n        // eslint-disable-next-line\n        videoRef.current.removeEventListener('canplay', handleMediaLoaded);\n      }\n      if (hlsRef.current) {\n        hlsRef.current.destroy();\n        hlsRef.current = null;\n      }\n    };\n  }, [currentSrc, isHLSJSActive, handleMediaLoaded]);\n\n  useEffect(() => {\n    if (isLoaded) {\n      if (hlsRef.current) {\n        const hlsAudioTrack = hlsRef.current.audioTracks?.[currentAudioTrackIndex];\n\n        if (hlsAudioTrack) {\n          hlsRef.current.audioTrack = hlsAudioTrack.id;\n        }\n      } else if (videoRef.current) {\n        // Do not change audio if we don't have it (mostly on HLS)\n        // @ts-expect-error\n        if (videoRef.current.audioTracks?.[currentAudioTrackIndex]) {\n          // @ts-expect-error\n          forEach(videoRef.current.audioTracks, (audioTrack, idx: number) => {\n            audioTrack.enabled = idx === currentAudioTrackIndex;\n          });\n\n          videoRef.current.currentTime -= 1;\n        }\n      }\n    }\n  }, [isLoaded, currentAudioTrackIndex]);\n\n  useEffect(() => {\n    if (isLoaded) {\n      if (videoRef.current) {\n        // clear existing subtitles\n        while (videoRef.current.firstChild) {\n          // @ts-expect-error\n          videoRef.current.lastChild.track.mode = 'disabled';\n          videoRef.current.removeChild(videoRef.current.lastChild!);\n        }\n\n        if (currentSubtitleTrack) {\n          const addSubtitleTrack = (src: string) => {\n            if (videoRef.current) {\n              const track = document.createElement('track');\n              videoRef.current.appendChild(track);\n\n              track.src = src;\n              track.kind = 'captions';\n              track.id = currentSubtitleTrack.name;\n              track.label = currentSubtitleTrack.name;\n              track.srclang = currentSubtitleTrack.lang;\n\n              track.track.mode = 'showing';\n            }\n          };\n\n          if (currentSubtitleTrack.src.endsWith('.srt')) {\n            convertToVTT(currentSubtitleTrack.src).then(addSubtitleTrack);\n          } else {\n            addSubtitleTrack(currentSubtitleTrack.src);\n          }\n        }\n      }\n    }\n  }, [isLoaded, currentSubtitleTrack]);\n\n  useEffect(() => {\n    isSettingsOpenRef.current = Boolean(isSettingsOpen);\n  }, [isSettingsOpen]);\n\n  return useMemo(\n    () => ({\n      videoRef,\n      getAudioTracks,\n      getAudioTrack,\n      setAudioTrack,\n      getSourceTracks,\n      getSourceTrack,\n      setSourceTrack,\n      getSubtitleTracks,\n      getSubtitleTrack,\n      setSubtitleTrack,\n    }),\n    [\n      videoRef,\n      getAudioTracks,\n      getAudioTrack,\n      setAudioTrack,\n      getSourceTracks,\n      getSourceTrack,\n      setSourceTrack,\n      getSubtitleTracks,\n      getSubtitleTrack,\n      setSubtitleTrack,\n    ],\n  );\n}\n\nfunction useVideoPlayerApi(ref: React.ForwardedRef<MediaRef>, props: OwnProps) {\n  const player = useVideoPlayer(props);\n  const videoRef = player.videoRef;\n\n  const getCurrentTime = useCallback(() => {\n    if (videoRef.current) {\n      return videoRef.current.currentTime;\n    }\n    return 0;\n  }, [videoRef]);\n  const setCurrentTime = useCallback(\n    (currentTime: number) => {\n      if (videoRef.current) {\n        videoRef.current.currentTime = currentTime;\n      }\n    },\n    [videoRef],\n  );\n  const getPlaybackRate = useCallback(() => {\n    if (videoRef.current) {\n      return videoRef.current.playbackRate;\n    }\n    return 1;\n  }, [videoRef]);\n  const setPlaybackRate = useCallback(\n    (playbackRate: number) => {\n      if (videoRef.current) {\n        videoRef.current.playbackRate = playbackRate;\n      }\n    },\n    [videoRef],\n  );\n  const getPaused = useCallback(() => {\n    if (videoRef.current) {\n      return videoRef.current.paused;\n    }\n    return false;\n  }, [videoRef]);\n  const getDuration = useCallback(() => {\n    if (videoRef.current) {\n      return videoRef.current.duration;\n    }\n    return 0;\n  }, [videoRef]);\n  const getError = useCallback(() => {\n    if (videoRef.current) {\n      return videoRef.current.networkState === videoRef.current.NETWORK_NO_SOURCE;\n    }\n    return false;\n  }, [videoRef]);\n  const getLoading = useCallback(() => {\n    if (videoRef.current) {\n      return videoRef.current.readyState < videoRef.current.HAVE_ENOUGH_DATA;\n    }\n    return true;\n  }, [videoRef]);\n  const getProportionLoaded = useCallback(() => {\n    if (videoRef.current) {\n      return (\n        videoRef.current.buffered.length && videoRef.current.buffered.end(videoRef.current.buffered.length - 1) / videoRef.current.duration\n      );\n    }\n    return 0;\n  }, [videoRef]);\n  const getProportionPlayed = useCallback(() => {\n    if (videoRef.current) {\n      return videoRef.current.currentTime / videoRef.current.duration;\n    }\n    return 0;\n  }, [videoRef]);\n  const play = useCallback(async () => {\n    await videoRef.current?.play();\n  }, [videoRef]);\n  const pause = useCallback(() => {\n    videoRef.current?.pause();\n  }, [videoRef]);\n  const playPause = useCallback(async () => {\n    if (getPaused()) {\n      await play();\n    } else {\n      pause();\n    }\n  }, [play, pause, getPaused]);\n  const load = useCallback(() => {\n    videoRef.current?.load();\n  }, [videoRef]);\n\n  const api = useMemo<MediaRef>(\n    () => ({\n      play,\n      pause,\n      playPause,\n      load,\n      get currentTime() {\n        return getCurrentTime();\n      },\n      set currentTime(currentTime) {\n        setCurrentTime(currentTime);\n      },\n      get audioTracks() {\n        return player.getAudioTracks();\n      },\n      get audioTrack() {\n        return player.getAudioTrack();\n      },\n      set audioTrack(audioTrack) {\n        player.setAudioTrack(audioTrack);\n      },\n      get sourceTracks() {\n        return player.getSourceTracks();\n      },\n      get sourceTrack() {\n        return player.getSourceTrack();\n      },\n      set sourceTrack(sourceTrack) {\n        player.setSourceTrack(sourceTrack);\n      },\n      get subtitleTracks() {\n        return player.getSubtitleTracks();\n      },\n      get subtitleTrack() {\n        return player.getSubtitleTrack();\n      },\n      set subtitleTrack(subtitleTrack) {\n        player.setSubtitleTrack(subtitleTrack);\n      },\n      get playbackRate() {\n        return getPlaybackRate();\n      },\n      set playbackRate(playbackRate) {\n        setPlaybackRate(playbackRate);\n      },\n      get paused() {\n        return getPaused();\n      },\n      get duration() {\n        return getDuration();\n      },\n      get error() {\n        return getError();\n      },\n      get loading() {\n        return getLoading();\n      },\n      get proportionLoaded() {\n        return getProportionLoaded();\n      },\n      get proportionPlayed() {\n        return getProportionPlayed();\n      },\n    }),\n    [\n      player,\n      play,\n      pause,\n      playPause,\n      load,\n      getCurrentTime,\n      setCurrentTime,\n      getPlaybackRate,\n      setPlaybackRate,\n      getPaused,\n      getDuration,\n      getError,\n      getLoading,\n      getProportionLoaded,\n      getProportionPlayed,\n    ],\n  );\n\n  useImperativeHandle(ref, () => api, [api]);\n\n  return useMemo(\n    () => ({\n      api,\n      player,\n    }),\n    [api, player],\n  );\n}\n\nconst MEDIA_EVENTS = [\n  'onAbort',\n  'onCanPlay',\n  'onCanPlayThrough',\n  'onDurationChange',\n  'onEmptied',\n  'onEncrypted',\n  'onEnded',\n  'onError',\n  'onLoadedData',\n  'onLoadedMetadata',\n  'onLoadStart',\n  'onPause',\n  'onPlay',\n  'onPlaying',\n  'onProgress',\n  'onRateChange',\n  'onSeeked',\n  'onSeeking',\n  'onStalled',\n  'onSuspend',\n  'onTimeUpdate',\n  'onVolumeChange',\n  'onWaiting',\n] as const;\n\ntype MediaEvents = keyof typeof MEDIA_EVENTS;\n\nexport type MediaProps = OwnProps & React.HTMLAttributes<HTMLVideoElement>;\n\nconst Media = React.forwardRef<MediaRef, MediaProps>(\n  (\n    { autoPlay, audioTracks, sourceTracks, subtitleTracks, streamingType, isSettingsOpen, onUpdate, className, mediaComponent, ...props },\n    ref,\n  ) => {\n    const handleUpdate = useCallback(() => {\n      onUpdate?.();\n    }, [onUpdate]);\n    const eventProps = useMemo(\n      () =>\n        MEDIA_EVENTS.reduce<Partial<Record<MediaEvents, Function>>>(\n          (result, event) => ({\n            ...result,\n            [event]: (...args: any[]) => {\n              handleUpdate();\n              // @ts-expect-error\n              props[event]?.(...args);\n            },\n          }),\n          {},\n        ),\n      [props, handleUpdate],\n    );\n    const { player } = useVideoPlayerApi(ref, { autoPlay, audioTracks, sourceTracks, subtitleTracks, streamingType, isSettingsOpen });\n\n    return <video {...props} {...eventProps} autoPlay={false} className={cx('w-screen h-screen', className)} ref={player.videoRef} />;\n  },\n);\n\nexport default Media;\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { VideoPlayerBase } from '@enact/moonstone/VideoPlayer';\nimport map from 'lodash/map';\n\nimport { AudioTrack, SourceTrack, SubtitleTrack } from 'components/media';\nimport Popup from 'components/popup';\nimport Select from 'components/select';\n\nconst NONE = 'NONE';\n\ntype Props = {\n  visible: boolean;\n  onClose: () => void;\n  player: React.MutableRefObject<VideoPlayerBase | undefined>;\n};\n\nconst Settings: React.FC<Props> = ({ visible, onClose, player }) => {\n  const [isOpen, setIsOpen] = useState(visible);\n  const [audios, setAudios] = useState<AudioTrack[]>([]);\n  const [currentAudio, setCurrentAudio] = useState<string | null>(null);\n  const [sources, setSources] = useState<SourceTrack[]>([]);\n  const [currentSource, setCurrentSource] = useState<string | null>(null);\n  const [subtitles, setSubtitles] = useState<SubtitleTrack[]>([]);\n  const [currentSubtitle, setCurrentSubtitle] = useState<string | null>(NONE);\n\n  const audioOptions = useMemo(() => map(audios, (audio) => ({ title: audio.name, value: audio.name })), [audios]);\n  const sourceOptions = useMemo(() => map(sources, (source) => ({ title: source.name, value: source.name })), [sources]);\n  const subtitleOptions = useMemo(\n    () => [{ title: 'Нет', value: NONE }, ...map(subtitles, (subtitle) => ({ title: subtitle.name, value: subtitle.name }))],\n    [subtitles],\n  );\n\n  const handleVideoUpdate = useCallback(\n    (name: string, value: string) => {\n      if (player.current) {\n        const video: any = player.current.getVideoNode();\n\n        video[name] = value;\n      }\n    },\n    [player],\n  );\n\n  const handleAudioChange = useCallback(\n    (audio: string) => {\n      setCurrentAudio(audio);\n      handleVideoUpdate('audioTrack', audio);\n    },\n    [handleVideoUpdate],\n  );\n  const handleSourceChange = useCallback(\n    (source: string) => {\n      setCurrentSource(source);\n      handleVideoUpdate('sourceTrack', source);\n    },\n    [handleVideoUpdate],\n  );\n  const handleSubtitleChange = useCallback(\n    (subtitle: string) => {\n      setCurrentSubtitle(subtitle);\n      handleVideoUpdate('subtitleTrack', subtitle);\n    },\n    [handleVideoUpdate],\n  );\n\n  const handleClose = useCallback(() => {\n    onClose();\n  }, [onClose]);\n\n  useEffect(() => {\n    if (visible && player.current) {\n      const video: any = player.current.getVideoNode();\n      const { audioTracks, audioTrack, sourceTracks, sourceTrack, subtitleTracks, subtitleTrack } = video;\n\n      if (audioTracks?.length > 1 || sourceTracks?.length > 1 || subtitleTracks?.length > 0) {\n        setAudios(audioTracks);\n        setCurrentAudio(audioTrack);\n\n        setSources(sourceTracks);\n        setCurrentSource(sourceTrack);\n\n        setSubtitles(subtitleTracks);\n        setCurrentSubtitle(subtitleTrack || NONE);\n      } else {\n        handleClose();\n      }\n    }\n  }, [visible, player, handleClose]);\n\n  useEffect(() => {\n    let timeoutId: NodeJS.Timeout;\n\n    if (visible) {\n      timeoutId = setTimeout(() => {\n        setIsOpen(true);\n      }, 100);\n    } else {\n      setIsOpen(false);\n    }\n\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  }, [visible]);\n\n  return (\n    <Popup visible={isOpen} onClose={handleClose}>\n      {audioOptions.length > 1 && (\n        <Select\n          className=\"my-4\"\n          label=\"Звук\"\n          value={currentAudio}\n          options={audioOptions}\n          onChange={handleAudioChange}\n          splitIn={2}\n          closeOnChange\n        />\n      )}\n      {sourceOptions.length > 1 && (\n        <Select\n          className=\"my-4\"\n          label=\"Качество\"\n          value={currentSource}\n          options={sourceOptions}\n          onChange={handleSourceChange}\n          splitIn={5}\n          closeOnChange\n        />\n      )}\n      {subtitleOptions.length > 1 && (\n        <Select\n          className=\"my-4\"\n          label=\"Субтитры\"\n          value={currentSubtitle}\n          options={subtitleOptions}\n          onChange={handleSubtitleChange}\n          splitIn={5}\n          closeOnChange\n        />\n      )}\n    </Popup>\n  );\n};\n\nexport default Settings;\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { VideoPlayerBase } from '@enact/moonstone/VideoPlayer';\n\nimport Button from 'components/button';\n\nimport { secondsToDuration } from 'utils/date';\n\ntype Props = {\n  player: React.MutableRefObject<VideoPlayerBase | undefined>;\n  startTime?: number;\n  startInDelay?: number;\n};\n\nconst StartFrom: React.FC<Props> = ({ startTime, startInDelay = 5, player }) => {\n  const [visible, setVisible] = useState(true);\n  const [startIn, setStartIn] = useState(startInDelay);\n  const startFrom = useMemo(() => secondsToDuration(startTime), [startTime]);\n\n  const handleStartFromClick = useCallback(() => {\n    if (player.current) {\n      setVisible(false);\n      const video: any = player.current.getVideoNode();\n\n      video.currentTime = startTime;\n    }\n  }, [startTime, player]);\n  const handleStartFromBeginingClick = useCallback(() => {\n    setVisible(false);\n  }, []);\n\n  useEffect(() => {\n    let intervalId: NodeJS.Timeout;\n\n    if (visible) {\n      intervalId = setInterval(() => {\n        setStartIn((prevStartIn) => {\n          const newStartIn = prevStartIn - 1;\n\n          if (newStartIn <= 0) {\n            handleStartFromClick();\n          }\n\n          return newStartIn;\n        });\n      }, 1000);\n    }\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, [visible, handleStartFromClick]);\n\n  if (!startTime || !visible) {\n    return null;\n  }\n\n  return (\n    <div className=\"flex justify-center absolute w-full z-101 bottom-32\">\n      <Button onClick={handleStartFromClick}>\n        Смотреть с {startFrom} через {startIn}\n      </Button>\n      <Button autoFocus onClick={handleStartFromBeginingClick}>\n        Смотреть с начала\n      </Button>\n    </div>\n  );\n};\n\nexport default StartFrom;\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport VideoPlayer, { VideoPlayerBase, VideoPlayerBaseProps } from '@enact/moonstone/VideoPlayer';\n\nimport Button from 'components/button';\nimport Media, { AudioTrack, SourceTrack, StreamingType, SubtitleTrack } from 'components/media';\nimport Text from 'components/text';\nimport useButtonEffect from 'hooks/useButtonEffect';\n\nimport Settings from './settings';\nimport StartFrom from './startFrom';\n\nexport type PlayerProps = {\n  title: string;\n  description?: string;\n  poster: string;\n  audios?: AudioTrack[];\n  sources: SourceTrack[];\n  subtitles?: SubtitleTrack[];\n  startTime?: number;\n  timeSyncInterval?: number;\n  streamingType?: StreamingType;\n  onPlay?: () => void;\n  onPause?: (currentTime: number) => void;\n  onEnded?: (currentTime: number) => void;\n  onTimeSync?: (currentTime: number) => void | Promise<void>;\n} & VideoPlayerBaseProps;\n\nconst Player: React.FC<PlayerProps> = ({\n  title,\n  description,\n  poster,\n  audios,\n  sources,\n  subtitles,\n  startTime,\n  timeSyncInterval = 30,\n  streamingType,\n  onPlay,\n  onPause,\n  onEnded,\n  onTimeSync,\n  ...props\n}) => {\n  const playerRef = useRef<VideoPlayerBase>();\n  const [isPaused, setIsPaused] = useState(true);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n\n  const handlePlay = useCallback(() => {\n    setIsPaused(false);\n    setIsSettingsOpen(false);\n    onPlay?.();\n  }, [onPlay]);\n  const handlePause = useCallback(\n    (e) => {\n      setIsPaused(true);\n      onPause?.(e.currentTime);\n    },\n    [onPause],\n  );\n  const handleEnded = useCallback(\n    (e) => {\n      onEnded?.(e.target.currentTime);\n    },\n    [onEnded],\n  );\n  const handleTimeSync = useCallback(async () => {\n    if (playerRef.current && onTimeSync) {\n      const video: any = playerRef.current.getVideoNode();\n\n      const currentTime = video['currentTime'];\n\n      await onTimeSync(currentTime);\n    }\n  }, [onTimeSync, playerRef]);\n  const handleLoadedMetadata = useCallback(() => {\n    setIsLoaded(true);\n  }, []);\n  const handleSettingsOpen = useCallback(() => {\n    if (playerRef.current) {\n      setIsSettingsOpen(true);\n\n      const video: any = playerRef.current.getVideoNode();\n      video.pause();\n    }\n  }, [playerRef]);\n  const handleSettingsClose = useCallback(() => {\n    if (playerRef.current) {\n      setIsSettingsOpen(false);\n\n      const video: any = playerRef.current.getVideoNode();\n      video.play();\n    }\n  }, []);\n  const handlePauseButton = useCallback(() => {\n    if (playerRef.current) {\n      const video: any = playerRef.current.getVideoNode();\n      video.pause();\n    }\n  }, [playerRef]);\n\n  useEffect(() => {\n    let timeoutId: NodeJS.Timeout;\n\n    if (isPaused) {\n      timeoutId = setTimeout(() => {\n        setIsPaused(false);\n      }, 5 * 1000);\n    }\n\n    return () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, [isPaused]);\n\n  useEffect(() => {\n    let intervalId: NodeJS.Timeout;\n\n    if (onTimeSync) {\n      intervalId = setInterval(handleTimeSync, timeSyncInterval * 1000);\n    }\n\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n    };\n  }, [timeSyncInterval, onTimeSync, handleTimeSync]);\n\n  useButtonEffect('Back', handleTimeSync);\n  useButtonEffect('Blue', handleSettingsOpen);\n  useButtonEffect('Play', handleSettingsClose);\n  useButtonEffect('Pause', handlePauseButton);\n  useButtonEffect('ArrowUp', handleSettingsOpen);\n\n  return (\n    <>\n      <Settings visible={isSettingsOpen} onClose={handleSettingsClose} player={playerRef} />\n      {isPaused && <Text className=\"absolute z-10 top-0 p-4\">{title}</Text>}\n      {isPaused && (\n        <Button className=\"absolute z-101 bottom-8 right-10 text-blue-600\" icon=\"settings\" iconOnly onClick={handleSettingsOpen} />\n      )}\n      {isLoaded && startTime! > 0 && <StartFrom startTime={startTime} player={playerRef} />}\n\n      <VideoPlayer\n        {...props}\n        //@ts-expect-error\n        ref={playerRef}\n        locale=\"ru\"\n        poster={poster}\n        title={description}\n        jumpBy={15}\n        onPlay={handlePlay}\n        onPause={handlePause}\n        onEnded={handleEnded}\n        onLoadedMetadata={handleLoadedMetadata}\n        streamingType={streamingType}\n        isSettingsOpen={isSettingsOpen}\n        audioTracks={audios}\n        sourceTracks={sources}\n        subtitleTracks={subtitles}\n        videoComponent={<Media />}\n      />\n    </>\n  );\n};\n\nexport default Player;\n"],"sourceRoot":""}